[package]
name = "abstract-client"
version = "0.22.1"
description = "A client oriented package for the Abstract Framework."
authors.workspace = true
edition.workspace = true
homepage.workspace = true
documentation.workspace = true
repository.workspace = true
license.workspace = true
keywords.workspace = true
readme = "README.md"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["test-utils"]
test-utils = ["cw-asset", "cw20", "cw20-base", "cw-plus-interface"]

[dependencies]
abstract-interface = { version = "0.22.1", path = "../abstract-interface" }
cosmwasm-std.workspace = true
abstract-std.workspace = true
cw-orch.workspace = true
serde.workspace = true
semver.workspace = true
thiserror.workspace = true
cw-ownable.workspace = true

# Used for test-utils feature
cw-asset = { workspace = true, optional = true }

# For Cw20 builder
cw-plus-interface = { package = "abstract-cw-plus-interface", version = "2.0.0", optional = true }
cw20 = { package = "abstract-cw20", version = "2.0.0", optional = true }
cw20-base = { package = "abstract-cw20-base", version = "2.0.0", optional = true }

[dev-dependencies]
abstract-testing.workspace = true
abstract-client = { path = ".", features = ["test-utils"] }
cw-asset.workspace = true
cw-controllers.workspace = true
abstract-app = { workspace = true, features = ["test-utils"] }
abstract-adapter = { workspace = true, features = ["test-utils"] }
account-factory.workspace = true
anyhow.workspace = true
cosmwasm-schema.workspace = true
cw-storage-plus.workspace = true
cw2.workspace = true
