[package]
description = "base app contract implementation"
edition     = { workspace = true }
license     = { workspace = true }
name        = "abstract-app"
resolver    = "2"
version     = "0.24.1"

[lints]
workspace = true

[lib]
crate-type = ["cdylib", "rlib"]


[features]
schema     = []
stargate   = ["abstract-sdk/stargate"]
test-utils = ["dep:abstract-testing", "abstract-sdk/test-utils"]

[dependencies]
abstract-sdk     = { workspace = true }
abstract-std     = { workspace = true }
abstract-testing = { workspace = true, optional = true }
cosmwasm-schema  = { workspace = true }
cosmwasm-std     = { workspace = true }
cw-asset         = { workspace = true }
cw-controllers   = { workspace = true }
cw-orch          = { workspace = true }
cw-storage-plus  = { workspace = true }
cw2              = { workspace = true }
schemars         = { workspace = true }
semver           = { workspace = true }
serde            = { workspace = true }
thiserror        = { workspace = true }

abstract-ibc-client = { version = "0.24.1", path = "../../contracts/native/ibc-client", default-features = false }
abstract-ibc-host   = { version = "0.24.1", path = "../../contracts/native/ibc-host", default-features = false }
abstract-interface  = { version = "0.24.1", path = "../../packages/abstract-interface" }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
workspace-hack = { version = "0.1", path = "../../workspace-hack" }

[dev-dependencies]
abstract-app               = { path = ".", features = ["test-utils"] }
abstract-integration-tests = { workspace = true }
cosmwasm-schema            = { workspace = true }
coverage-helper            = { workspace = true }
