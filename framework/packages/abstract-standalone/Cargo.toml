[package]
description = "base standalone contract implementation"
edition     = { workspace = true }
license     = { workspace = true }
name        = "abstract-standalone"
resolver    = "2"
version     = { workspace = true }

[lints]
workspace = true

[lib]
crate-type = ["cdylib", "rlib"]

[features]
stargate   = ["abstract-sdk/stargate"]
test-utils = ["dep:abstract-testing", "abstract-sdk/test-utils", "abstract-interface/testing"]

[dependencies]
abstract-sdk    = { workspace = true }
abstract-std    = { workspace = true }
cosmwasm-schema = { workspace = true }
cosmwasm-std    = { workspace = true }
cw-asset        = { workspace = true }
cw-controllers  = { workspace = true }
cw-storage-plus = { workspace = true }
cw2             = { workspace = true }
schemars        = { workspace = true }
semver          = { workspace = true }
serde           = { workspace = true }
thiserror       = { workspace = true }

# Interface
abstract-interface = { version = "0.25.0", path = "../../packages/abstract-interface" }
cw-orch            = { workspace = true }

# Testing
abstract-testing = { workspace = true, optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
workspace-hack = { version = "0.1", path = "../../workspace-hack" }

[dev-dependencies]
abstract-integration-tests = { workspace = true }
abstract-standalone        = { path = ".", features = ["test-utils"] }
cosmwasm-schema            = { workspace = true }
coverage-helper            = { workspace = true }
