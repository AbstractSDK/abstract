[package]
name = "abstract-account"
version = { workspace = true }
authors = { workspace = true }
edition = { workspace = true }
description = "Abstract Manager Contract"
license = { workspace = true }
readme = "README.md"
repository = "https://github.com/AbstractSDK/abstract"

exclude = ["contract.wasm", "hash.txt"]

[[example]]
name = "schema"
required-features = ["xion"]

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["export"]
export = []
xion = [
    "tiny-keccak",
    "hex",
    "sha2",
    "bech32",
    "base64",
    "phf",
    "rsa",
    "getrandom",
    "p256",
    "url",
    "ripemd",
    "cosmos-sdk-proto",
    "prost",
    "cosmwasm-std/cosmwasm_2_0",
]

[package.metadata.optimizer]
standard-build = true
builds = [{ name = "xion", features = ["xion"] }]

[dependencies]
cosmwasm-std = { workspace = true }
cosmwasm-schema = { workspace = true }
cw-controllers = { workspace = true }
cw-storage-plus = { workspace = true }
cw2 = { workspace = true }
cw20 = { workspace = true }
cw-asset = { workspace = true }
schemars = { workspace = true }
serde = { workspace = true }
thiserror = { workspace = true }
abstract-sdk = { workspace = true }
abstract-std = { workspace = true }
semver = { workspace = true }
abstract-macros = { workspace = true }

abstract-ica = { workspace = true }

# XION absacc
tiny-keccak = { version = "2", default-features = false, features = [
    "keccak",
], optional = true }
hex = { version = "0.4", default-features = false, optional = true }
sha2 = { version = "0.10.8", default-features = false, features = [
    "oid",
], optional = true }
bech32 = { version = "0.9.1", optional = true }
base64 = { version = "0.22.1", default-features = false, optional = true }
phf = { version = "0.11.2", default-features = false, features = [
    "macros",
], optional = true }
rsa = { version = "0.9.6", default-features = false, features = [
    "std",
], optional = true }
getrandom = { version = "0.2.15", default-features = false, features = [
    "custom",
], optional = true }
p256 = { version = "0.13.2", features = [
    "ecdsa-core",
    "arithmetic",
    "serde",
], optional = true }
url = { version = "2.5.2", default-features = false, optional = true }
ripemd = { version = "0.1.3", default-features = false, optional = true }
cosmos-sdk-proto = { git = "https://github.com/burnt-labs/cosmos-rust.git", rev = "d3b51db49b894f1c6b7836bb0a7b14f54f1dfb26", default-features = false, features = [
    "std",
    "cosmwasm",
    "xion",
    "serde",
], optional = true }
prost = { version = "0.13.2", default-features = false, optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
workspace-hack = { version = "0.1", path = "../../workspace-hack" }

[dev-dependencies]
cw20 = { workspace = true }
# cw721-base = { version = "0.18.0", features = ["library"] }
# cw721 = { version = "0.18.0" }
abstract-interface = { workspace = true }
cw-orch = { workspace = true, features = ["snapshot-testing"] }
anyhow = { workspace = true }
ans-host = { workspace = true }
registry = { workspace = true }
module-factory = { workspace = true }
rstest = { workspace = true }
assertor = { workspace = true, features = ["anyhow"] }
abstract-sdk = { workspace = true, features = ["test-utils"] }
abstract-adapter = { workspace = true, features = ["test-utils"] }
abstract-app = { workspace = true, features = ["test-utils"] }
abstract-standalone = { workspace = true, features = ["test-utils"] }
abstract-testing = { workspace = true }
abstract-macros = { workspace = true }
abstract-integration-tests = { workspace = true }

[profile.release]
overflow-checks = true
