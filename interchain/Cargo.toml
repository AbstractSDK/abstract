[workspace]
members = [
  "scripts",
  "interchain-end_to_end_testing",
  "framework-clone-testing",
  "modules-clone-testing",
]

# Enable the version 2 feature resolver, which avoids unifying features for targets that are not being built
#
# Critically this prevents dev-dependencies from enabling features even when not building a target that
# uses dev-dependencies, e.g. the library crate. This in turn ensures that we can catch invalid feature
# flag combinations that would otherwise only surface in dependent crates
#
# Reference - https://doc.rust-lang.org/nightly/cargo/reference/features.html#feature-resolver-version-2
# See - https://github.com/apache/arrow-rs/pull/1822/files
resolver = "2"

[workspace.package]
authors = [
  "CyberHoward <cyberhoward@protonmail.com>",
  "Riada <riada@abstract.money>",
  "Abstract Money <contact@abstract.money>",
]
documentation = "https://docs.abstract.money/"
edition = "2021"
homepage = "https://abstract.money"
keywords = ["cosmos", "cosmwasm", "framework"]
license = "GPL-3.0-or-later"
repository = "https://github.com/AbstractSDK/abstract"
version = "0.26.0"

[workspace.dependencies]
cosmwasm-schema = { version = "2.0" }
cosmwasm-std    = { version = "2.0" }
cw-controllers  = { version = "2.0" }
cw-storage-plus = "2.0.0"
cw-utils        = { version = "2.0" }
cw2             = { version = "2.0.0" }
cw20            = { version = "2.0.0" }
cw20-base       = { version = "2.0.0", features = ["library"] }

cw-address-like = { version = "2.0" }
cw-asset        = { version = "4.0" }
cw-ownable      = { version = "2.0" }

protobuf  = { version = "2", features = ["with-bytes"] }
schemars  = "0.8"
serde     = { version = "1.0", default-features = false, features = ["derive"] }
thiserror = { version = "1.0.49" }

clap   = { version = "4.0.32", features = ["derive"] }
semver = "1.0"
tokio  = { version = "1.33.0", features = ["full"] }

cw-orch-polytone = { package = "abstract-cw-orch-polytone", version = "5.0.0" }
polytone         = { package = "abstract-polytone", version = "2.0.0" }
polytone-note    = { package = "abstract-polytone-note", version = "4.0.0" }

cw-orch               = { version = "0.27.0" }
cw-orch-clone-testing = { version = "0.9.0" }
cw-orch-daemon        = { version = "0.28.0" }
cw-orch-interchain    = { version = "0.8.0" }
cw-orch-proto         = { version = "0.9.0" }

# Keep these as path, creates cirular dependency otherwise
# Only need to re-publish all contracts if a re-publish of abstract-interface is required
abstract-adapter   = { version = "0.26.0", path = "../framework/packages/abstract-adapter" }
abstract-app       = { version = "0.26.0", path = "../framework/packages/abstract-app" }
abstract-client    = { version = "0.26.0", path = "../framework/packages/abstract-client" }
abstract-interface = { version = "0.26.0", path = "../framework/packages/abstract-interface" }
abstract-sdk       = { version = "0.26.0", path = "../framework/packages/abstract-sdk" }
abstract-std       = { version = "0.26.0", path = "../framework/packages/abstract-std" }
abstract-testing   = { version = "0.26.0", path = "../framework/packages/abstract-testing" }
# Modules
abstract-account = { version = "0.26.1", path = "../framework/contracts/account" }
# croncat-app = { path = "../modules/contracts/apps/croncat" }
challenge-app = { path = "../modules/contracts/apps/challenge" }
# dca-app = { path = "../modules/contracts/apps/dca" }
abstract-cw-staking           = { path = "../modules/contracts/adapters/cw-staking" }
abstract-dex-adapter          = { path = "../modules/contracts/adapters/dex" }
abstract-money-market-adapter = { path = "../modules/contracts/adapters/money-market" }

abstract-ica-client = { version = "0.26.0", path = "../framework/contracts/native/ica-client" }
abstract-xion       = { package = "xion-account", version = "=0.1.1", features = ["library"] }

## Testing
anyhow = "1"
rstest = "0.17.0"

# Do not remove, none of interchain packages are deployed
[patch.crates-io]
abstract-adapter               = { path = "../framework/packages/abstract-adapter" }
abstract-adapter-utils         = { path = "../framework/packages/standards/utils" }
abstract-app                   = { path = "../framework/packages/abstract-app" }
abstract-client                = { path = "../framework/packages/abstract-client" }
abstract-dex-standard          = { path = "../framework/packages/standards/dex" }
abstract-interface             = { path = "../framework/packages/abstract-interface" }
abstract-macros                = { path = "../framework/packages/abstract-macros" }
abstract-money-market-standard = { path = "../framework/packages/standards/money-market" }
abstract-sdk                   = { path = "../framework/packages/abstract-sdk" }
abstract-staking-standard      = { path = "../framework/packages/standards/staking" }
abstract-std                   = { path = "../framework/packages/abstract-std" }
abstract-testing               = { path = "../framework/packages/abstract-testing" }


# Backup release profile, will result in warnings during optimization
[profile.release]
codegen-units    = 1
debug            = false
debug-assertions = false
incremental      = false
lto              = true
opt-level        = 3
overflow-checks  = true
panic            = 'abort'
rpath            = false
