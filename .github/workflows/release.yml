name: Release and Publish 

# Job that updates the wasms of the mono-repo after a PR is merged to main.
# Or if it is triggerd manually.

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
    branches:
      - 'release/*'

jobs:
  build:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/release/') || github.event_name == 'workflow_dispatch'
    steps:
      - name: Tickle CircleCI
        env:
          CCI_TOKEN: ${{ secrets.CCI_TOKEN }}
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF}" | sed -e "s/refs\/heads\///")
          
          curl -X POST \
          -H "Circle-Token: ${CCI_TOKEN}" \
          -H 'Content-Type: application/json' \
          -H 'Accept: application/json' \
          -d '{
          "branch": "'"$BRANCH_NAME"'",
          "parameters": {
            "GHA_Meta": "build_wasms"
          }
          }' https://circleci.com/api/v2/project/gh/AbstractSDK/abstract/pipeline

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/release/') || github.event_name == 'workflow_dispatch'
    steps:
    - name: Tickle CircleCI for Deploy and Wait for Completion
      env:
        CCI_TOKEN: ${{ secrets.CCI_TOKEN }}
      run: |
        BRANCH_NAME=$(echo "${GITHUB_REF}" | sed -e "s/refs\/heads\///")
        
        # Trigger the CircleCI pipeline and get the pipeline ID
        RESPONSE=$(curl -X POST \
          -H "Circle-Token: ${CCI_TOKEN}" \
          -H 'Content-Type: application/json' \
          -H 'Accept: application/json' \
          -d '{
            "branch": "'"$BRANCH_NAME"'",
            "parameters": {
              "GHA_Meta": "deploy_all"
            }
          }' https://circleci.com/api/v2/project/gh/AbstractSDK/abstract/pipeline)

        PIPELINE_ID=$(echo $RESPONSE | jq -r '.id')

        # Wait for the CircleCI pipeline to finish
        while true; do
          STATUS=$(curl -H "Circle-Token: ${CCI_TOKEN}" \
            https://circleci.com/api/v2/pipeline/$PIPELINE_ID | jq -r '.state')
          
          if [[ "$STATUS" == "success" || "$STATUS" == "failed" || "$STATUS" == "canceled" ]]; then
            break
          fi

          echo "CircleCI job status: $STATUS. Waiting for completion..."
          sleep 30  # Wait for 30 seconds before checking again
        done

        # Fail the GitHub Action if the CircleCI job failed
        if [[ "$STATUS" == "failed" ]]; then
          exit 1
        fi

          - name: Tickle CircleCI for Deploy
            env:
              CCI_TOKEN: ${{ secrets.CCI_TOKEN }}
            run: |
              curl -X POST \
              -H "Circle-Token: ${CCI_TOKEN}" \
              -H 'Content-Type: application/json' \
              -H 'Accept: application/json' \
              -d '{
              "branch": "'"$BRANCH_NAME"'",
              "parameters": {
                "GHA_Meta": "deploy_all"
              }
              }' https://circleci.com/api/v2/project/gh/AbstractSDK/abstract/pipeline

