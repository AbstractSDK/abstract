[package]
description = "The DEX adapter is an Abstract adapter for interacting with usual DEX commands. It provides a common interface for all DEXes"
name        = "abstract-dex-adapter"

authors = { workspace = true }
edition = { workspace = true }
license = { workspace = true }
version = { workspace = true }

exclude  = ["contract.wasm", "hash.txt"]
resolver = "2"


[lib]
crate-type = ["cdylib", "rlib"]

[[example]]
name = "deploy"

[[example]]
name              = "schema"
required-features = ["schema"]

[features]
default = ["export"]
export = []
schema = ["abstract-adapter/schema"]
testing = [
  "dep:abstract-client",
  "dep:cw20",
  "dep:serde_json",
  "abstract-adapter/test-utils",
]
local = [
  "abstract-wyndex-adapter/local",
  "abstract-astrovault-adapter/local",
  "abstract-kujira-adapter/local",
  "abstract-neutron-dex-adapter/local",
]

# Supported Dexes
osmosis = ["abstract-osmosis-adapter/full_integration"]
wynd    = ["abstract-wyndex-adapter/full_integration"]
# astroport = ["abstract-astroport-adapter/full_integration"]
astrovault = ["abstract-astrovault-adapter/full_integration"]
fin        = ["abstract-kujira-adapter/full_integration"]
neutron    = ["abstract-neutron-dex-adapter/full_integration"]

neutron-test = ["dep:cw-orch-neutron-test-tube"]
osmosis-test = ["dep:cw-orch-osmosis-test-tube"]

# Builds
[package.metadata.optimizer]
builds = [
  { name = "juno", features = ["wynd"] },
  # { name = "terra2", features = [
  #   "astroport",
  # ] },
  { name = "neutron", features = ["neutron"] },
  # { name = "neutron", features = [
  #   "astroport",
  # ] },
  { name = "osmosis", features = ["osmosis"] },
  { name = "kujira", features = ["fin"] },
  # { name = "injective", features = [
  #   "astroport",
  # ] },
  # { name = "sei", features = [
  #   "astroport",
  # ] },
  { name = "archway", features = ["astrovault"] },
]

[dependencies]
abstract-adapter          = { workspace = true }
cosmwasm-schema           = { workspace = true }
cosmwasm-std              = { workspace = true }
cw-asset                  = { workspace = true }
cw-orch                   = { workspace = true }
cw-orch-neutron-test-tube = { workspace = true, optional = true }
cw-orch-osmosis-test-tube = { workspace = true, optional = true }
cw-storage-plus           = { workspace = true }
cw20                      = { workspace = true, optional = true }

# Local
abstract-adapter-utils = { workspace = true }
abstract-dex-standard  = { workspace = true }

# # Wyndex #
abstract-wyndex-adapter = { workspace = true }

# Osmosis #
abstract-osmosis-adapter = { workspace = true }

# # Terra #
# abstract-astroport-adapter = { workspace = true }

# Kujira #
abstract-kujira-adapter = { workspace = true }

# # Terra dexes #
# terraswap = { version = "2.8.0", optional = true }

# Astrovault #
abstract-astrovault-adapter = { workspace = true }

# Neutron #
abstract-neutron-dex-adapter = { workspace = true }
prost                        = "0.12.3"

# Testing #
abstract-client = { workspace = true, features = ["test-utils"], optional = true }
serde_json      = { version = "1.0", optional = true }

[dev-dependencies]
abstract-interface = { workspace = true, features = ["daemon"] }
anyhow             = { workspace = true }
clap               = { workspace = true }
dotenv             = "0.15.0"
env_logger         = "0.11.3"
mockdex-bundle     = { workspace = true }
semver             = { workspace = true }
tokio              = { workspace = true }

bip32 = { version = "0.5.2" }
dex = { path = ".", features = [
  "wynd",
  "osmosis",
  "testing",
  "local"
], package = "abstract-dex-adapter" }

# abstract-wyndex-adapter = { workspace = true, features = ["local"] }

cw-utils  = { workspace = true }
cw20      = { workspace = true }
cw20-base = { workspace = true }

abstract-integration-tests  = { workspace = true }

cw-orch                     = { workspace = true, features = ["daemon"] }
cw-orch-interchain          = { workspace = true, features = ["daemon"] }
cw-plus-orch                = { workspace = true }
neutron-std                 = "5.0.1-rc0"
osmosis-std                 = "0.26.0"
prost                       = "0.12.3"
prost-types                 = "0.13.3"
prost_13                    = { version = "0.13.3", package = "prost" }
