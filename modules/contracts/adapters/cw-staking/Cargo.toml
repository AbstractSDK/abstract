[package]
authors.workspace = true
description       = "The Cw-staking tendermint adapter is an Abstract adapter for staking tokens."
edition.workspace = true
license           = { workspace = true }
name              = "abstract-cw-staking"
publish           = false
resolver          = "2"
version.workspace = true

exclude = [
  # Those files are rust-optimizer artifacts. You might want to commit them for convenience but they should not be part of the source code publication.
  "contract.wasm",
  "hash.txt",
]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[[example]]
name = "deploy"

[[example]]
name              = "schema"
required-features = ["schema"]

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default      = ["export"]
export       = []
osmosis-test = ["dep:cw-orch-osmosis-test-tube"]
schema       = ["abstract-adapter/schema"]
testing      = ["dep:abstract-client", "dep:cw20", "abstract-adapter/test-utils"]

# Supported Dexes
osmosis = ["abstract-osmosis-adapter/full_integration"]
wynd    = ["abstract-wyndex-adapter/full_integration"]
# astroport = ["abstract-astroport-adapter/full_integration"]
astrovault = ["abstract-astrovault-adapter/full_integration"]
bow        = ["abstract-kujira-adapter/full_integration"]

# Builds
[package.metadata.optimizer]
builds = [
  { name = "juno", features = ["wynd"] },
  # { name = "terra2", features = [
  #   "astroport",
  # ] },
  # { name = "neutron", features = [
  #   "astroport",
  # ] },
  { name = "osmosis", features = ["osmosis"] },
  { name = "kujira", features = ["bow"] },
  # { name = "injective", features = [
  #   "astroport",
  # ] },
  # { name = "sei", features = [
  #   "astroport",
  # ] },
  { name = "archway", features = ["astrovault"] },
]

[dependencies]
cosmwasm-schema = { workspace = true }
cosmwasm-std    = { workspace = true }
cw-asset        = { workspace = true }
cw-utils        = { workspace = true }

abstract-adapter          = { workspace = true }
cw-orch                   = { workspace = true }
cw-orch-osmosis-test-tube = { workspace = true, optional = true }

# Local
abstract-adapter-utils    = { workspace = true }
abstract-staking-standard = { workspace = true }

# # Juno dexes #
abstract-wyndex-adapter = { workspace = true }

# # Osmosis #
abstract-osmosis-adapter = { workspace = true }

# # Terra #
# abstract-astroport-adapter = { workspace = true }

# Kujira #
abstract-kujira-adapter = { workspace = true }

# Astrovault #
abstract-astrovault-adapter = { workspace = true }

# Testing #
abstract-client = { workspace = true, optional = true }
cw20            = { workspace = true, optional = true }

[dev-dependencies]
abstract-adapter = { workspace = true, features = ["test-utils"] }
abstract-integration-tests = { workspace = true }
anyhow = { workspace = true }
bip32 = { version = "0.5.2" }
clap = { workspace = true }
cw-orch = { workspace = true, features = ["daemon"] }
cw-staking = { path = ".", package = "abstract-cw-staking", features = [
  # "wynd",
  "osmosis",
  "testing",
] }
cw20 = { workspace = true }
cw20-base = { workspace = true }
dotenv = "0.15.0"
env_logger = "0.11.3"
log = "0.4.14"
mockdex-bundle = { workspace = true }
semver = { version = "1.0" }
serde-cw-value = "0.7.0"
tokio = { version = "1.4", features = ["full"] }
abstract-client = {workspace = true, features = ["test-utils"]}

abstract-astrovault-adapter = { workspace = true, features = ["local"] }
abstract-kujira-adapter     = { workspace = true, features = ["local"] }
abstract-wyndex-adapter     = { workspace = true, features = ["local"] }
