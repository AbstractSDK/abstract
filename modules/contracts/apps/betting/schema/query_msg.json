{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "oneOf": [
    {
      "description": "A query to the base.",
      "type": "object",
      "required": [
        "base"
      ],
      "properties": {
        "base": {
          "$ref": "#/definitions/BaseQueryMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Custom query",
      "type": "object",
      "required": [
        "module"
      ],
      "properties": {
        "module": {
          "$ref": "#/definitions/BetQueryMsg"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "AccountId": {
      "description": "Unique identifier for an account. On each chain this is unique.",
      "type": "object",
      "required": [
        "seq",
        "trace"
      ],
      "properties": {
        "seq": {
          "description": "Unique identifier for the accounts create on a local chain. Is reused when creating an interchain account.",
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "trace": {
          "description": "Sequence of the chain that triggered the IBC account creation `AccountTrace::Local` if the account was created locally Example: Account created on Juno which has an abstract interchain account on Osmosis, which in turn creates an interchain account on Terra -> `AccountTrace::Remote(vec![\"juno\", \"osmosis\"])`",
          "allOf": [
            {
              "$ref": "#/definitions/AccountTrace"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "AccountTrace": {
      "description": "The identifier of chain that triggered the account creation",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "local"
          ]
        },
        {
          "type": "object",
          "required": [
            "remote"
          ],
          "properties": {
            "remote": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChainName"
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "BaseQueryMsg": {
      "oneOf": [
        {
          "description": "Returns [`AppConfigResponse`]",
          "type": "object",
          "required": [
            "base_config"
          ],
          "properties": {
            "base_config": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Returns the admin.",
          "type": "object",
          "required": [
            "base_admin"
          ],
          "properties": {
            "base_admin": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Returns module data",
          "type": "object",
          "required": [
            "module_data"
          ],
          "properties": {
            "module_data": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "BetQueryMsg": {
      "description": "Query Msg",
      "oneOf": [
        {
          "description": "Returns [`RoundResponse`]",
          "type": "object",
          "required": [
            "round"
          ],
          "properties": {
            "round": {
              "type": "object",
              "required": [
                "round_id"
              ],
              "properties": {
                "round_id": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Returns [`RoundsResponse`]",
          "type": "object",
          "required": [
            "list_rounds"
          ],
          "properties": {
            "list_rounds": {
              "type": "object",
              "properties": {
                "limit": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "uint32",
                  "minimum": 0.0
                },
                "start_after": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "uint64",
                  "minimum": 0.0
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Returns [`OddsResponse`]",
          "type": "object",
          "required": [
            "odds"
          ],
          "properties": {
            "odds": {
              "type": "object",
              "required": [
                "round_id",
                "team_id"
              ],
              "properties": {
                "round_id": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                },
                "team_id": {
                  "$ref": "#/definitions/AccountId"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Returns [`ListOddsResponse`]",
          "type": "object",
          "required": [
            "list_odds"
          ],
          "properties": {
            "list_odds": {
              "type": "object",
              "required": [
                "round_id"
              ],
              "properties": {
                "round_id": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Returns [`ConfigResponse`]",
          "type": "object",
          "required": [
            "config"
          ],
          "properties": {
            "config": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "ChainName": {
      "description": "The name of a chain, aka the chain-id without the post-fix number. ex. `cosmoshub-4` -> `cosmoshub`, `juno-1` -> `juno`",
      "type": "string"
    }
  }
}
