
build:
  cargo build

# Test everything
test:
  cargo nextest run

format:
  cargo fmt --all
  find . -type f -iname "*.toml" -print0 | xargs -0 taplo format

lint:
  cargo clippy --all --all-features -- -D warnings

lintfix:
  cargo clippy --fix --allow-staged --allow-dirty --all-features
  just format

check-all:
  cargo check --all-features

check:
  cargo check

refresh:
  cargo clean && cargo update

check-codecov:
  cat codecov.yml | curl --data-binary @- https://codecov.io/validate

# Publish crates
publish:
  ./publish/publish.sh

watch:
  cargo watch -x lcheck

watch-test:
  cargo watch -x "nextest run"

wasm:
  ./build_release.sh

wasm-module module:
  RUSTFLAGS='-C link-arg=-s' cargo wasm --package {{module}}

run-script script +CHAINS:
  (cd scripts && cargo run --bin {{script}} -- --network-ids {{CHAINS}})

deploy +CHAINS:
  just run-script full_deploy {{CHAINS}}

migrate +CHAINS:
  just run-script migrate {{CHAINS}}

# Download the wasms and deploy Abstract to all the chains
deploy-to-all-chains:
  just download-wasms
  just run-script full_deploy uni-6 pisco-1 juno-1 phoenix-1


publish-schemas:
  SCHEMA_OUT_DIR=$(cd ../../schemas && echo "$PWD") \
    cargo ws exec --no-bail bash -lc 'cargo schema && { jq -r .contract_version schema/module-schema.json > _version.txt; outdir="$SCHEMA_OUT_DIR/abstract/${PWD##*/}/$(cat _version.txt)"; mkdir -p "$outdir"; rm -rf "schema/raw"; cp -a "schema/." "$outdir"; rm _version.txt; }'
