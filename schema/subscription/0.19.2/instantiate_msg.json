{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "InstantiateMsg",
  "type": "object",
  "required": [
    "base",
    "module"
  ],
  "properties": {
    "base": {
      "description": "base instantiate information",
      "allOf": [
        {
          "$ref": "#/definitions/BaseInstantiateMsg"
        }
      ]
    },
    "module": {
      "description": "custom instantiate msg",
      "allOf": [
        {
          "$ref": "#/definitions/SubscriptionInstantiateMsg"
        }
      ]
    }
  },
  "additionalProperties": false,
  "definitions": {
    "AssetInfoBase_for_String": {
      "description": "Represents the type of an fungible asset.\n\nEach **asset info** instance can be one of three variants:\n\n- Native SDK coins. To create an **asset info** instance of this type, provide the denomination. - CW20 tokens. To create an **asset info** instance of this type, provide the contract address.",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "native"
          ],
          "properties": {
            "native": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "cw20"
          ],
          "properties": {
            "cw20": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "BaseInstantiateMsg": {
      "description": "Used by Module Factory to instantiate App",
      "type": "object",
      "required": [
        "ans_host_address",
        "version_control_address"
      ],
      "properties": {
        "ans_host_address": {
          "type": "string"
        },
        "version_control_address": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "EmissionType_for_String": {
      "description": "Setting for protocol token emissions",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "none"
          ]
        },
        {
          "description": "A fixed number of tokens are distributed to users on a per-second basis. emission = second_shared / total_subscribers",
          "type": "object",
          "required": [
            "second_shared"
          ],
          "properties": {
            "second_shared": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "$ref": "#/definitions/AssetInfoBase_for_String"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Each user receives a fixed number of tokens on a per-second basis. emission = second_per_user",
          "type": "object",
          "required": [
            "second_per_user"
          ],
          "properties": {
            "second_per_user": {
              "type": "array",
              "items": [
                {
                  "$ref": "#/definitions/Decimal"
                },
                {
                  "$ref": "#/definitions/AssetInfoBase_for_String"
                }
              ],
              "maxItems": 2,
              "minItems": 2
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "SubscriptionInstantiateMsg": {
      "description": "Subscription instantiation message",
      "type": "object",
      "required": [
        "income_averaging_period",
        "payment_asset",
        "subscription_cost_per_second",
        "subscription_per_second_emissions"
      ],
      "properties": {
        "income_averaging_period": {
          "description": "How often update income average",
          "allOf": [
            {
              "$ref": "#/definitions/Uint64"
            }
          ]
        },
        "payment_asset": {
          "description": "Asset for payment",
          "allOf": [
            {
              "$ref": "#/definitions/AssetInfoBase_for_String"
            }
          ]
        },
        "subscription_cost_per_second": {
          "description": "Cost of the subscription on a per-second basis.",
          "allOf": [
            {
              "$ref": "#/definitions/Decimal"
            }
          ]
        },
        "subscription_per_second_emissions": {
          "description": "Subscription emissions per second",
          "allOf": [
            {
              "$ref": "#/definitions/EmissionType_for_String"
            }
          ]
        },
        "unsubscription_hook_addr": {
          "description": "Unsubscription hook addr to send [unsubscribe message](`crate::msg::UnsubscribedHookMsg`)",
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "Uint64": {
      "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
      "type": "string"
    }
  }
}
