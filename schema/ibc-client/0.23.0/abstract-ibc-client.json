{
  "contract_name": "abstract-ibc-client",
  "contract_version": "0.23.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "description": "This needs no info. Owner of the contract is whoever signed the InstantiateMsg.",
    "type": "object",
    "required": [
      "ans_host_address",
      "version_control_address"
    ],
    "properties": {
      "ans_host_address": {
        "type": "string"
      },
      "version_control_address": {
        "type": "string"
      }
    },
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "description": "Update the ownership.",
        "type": "object",
        "required": [
          "update_ownership"
        ],
        "properties": {
          "update_ownership": {
            "$ref": "#/definitions/Action"
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Owner method: Registers the polytone note on the local chain as well as the host on the remote chain to send messages through This allows for monitoring which chain are connected to the contract remotely",
        "type": "object",
        "required": [
          "register_infrastructure"
        ],
        "properties": {
          "register_infrastructure": {
            "type": "object",
            "required": [
              "chain",
              "host",
              "note"
            ],
            "properties": {
              "chain": {
                "description": "Chain to register the infrastructure for (\"juno\", \"osmosis\", etc.)",
                "allOf": [
                  {
                    "$ref": "#/definitions/TruncatedChainId"
                  }
                ]
              },
              "host": {
                "description": "Address of the abstract host deployed on the remote chain",
                "type": "string"
              },
              "note": {
                "description": "Polytone note (locally deployed)",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Owner method: Update the config on IBC client",
        "type": "object",
        "required": [
          "update_config"
        ],
        "properties": {
          "update_config": {
            "type": "object",
            "properties": {
              "ans_host": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "version_control": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Only callable by Account proxy Will attempt to forward the specified funds to the corresponding address on the remote chain.",
        "type": "object",
        "required": [
          "send_funds"
        ],
        "properties": {
          "send_funds": {
            "type": "object",
            "required": [
              "funds",
              "host_chain"
            ],
            "properties": {
              "funds": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Coin"
                }
              },
              "host_chain": {
                "description": "host chain to be executed on Example: \"osmosis\"",
                "allOf": [
                  {
                    "$ref": "#/definitions/TruncatedChainId"
                  }
                ]
              },
              "memo": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Only callable by Account proxy Register an Account on a remote chain over IBC This action creates a proxy for them on the remote chain.",
        "type": "object",
        "required": [
          "register"
        ],
        "properties": {
          "register": {
            "type": "object",
            "required": [
              "host_chain",
              "install_modules"
            ],
            "properties": {
              "base_asset": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/AssetEntry"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "host_chain": {
                "description": "host chain to be executed on Example: \"osmosis\"",
                "allOf": [
                  {
                    "$ref": "#/definitions/TruncatedChainId"
                  }
                ]
              },
              "install_modules": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ModuleInstallConfig"
                }
              },
              "namespace": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Only callable by Account Module",
        "type": "object",
        "required": [
          "module_ibc_action"
        ],
        "properties": {
          "module_ibc_action": {
            "type": "object",
            "required": [
              "host_chain",
              "msg",
              "target_module"
            ],
            "properties": {
              "callback": {
                "description": "Callback info to identify the callback that is sent (acts similar to the reply ID)",
                "anyOf": [
                  {
                    "$ref": "#/definitions/Callback"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "host_chain": {
                "description": "host chain to be executed on Example: \"osmosis\"",
                "allOf": [
                  {
                    "$ref": "#/definitions/TruncatedChainId"
                  }
                ]
              },
              "msg": {
                "description": "Json-encoded IbcMsg to the target module",
                "allOf": [
                  {
                    "$ref": "#/definitions/Binary"
                  }
                ]
              },
              "target_module": {
                "description": "Module of this account on host chain",
                "allOf": [
                  {
                    "$ref": "#/definitions/ModuleInfo"
                  }
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Only callable by Account Module",
        "type": "object",
        "required": [
          "ibc_query"
        ],
        "properties": {
          "ibc_query": {
            "type": "object",
            "required": [
              "callback",
              "host_chain",
              "queries"
            ],
            "properties": {
              "callback": {
                "description": "Callback info to identify the callback that is sent (acts similar to the reply ID)",
                "allOf": [
                  {
                    "$ref": "#/definitions/Callback"
                  }
                ]
              },
              "host_chain": {
                "description": "host chain to be executed on Example: \"osmosis\"",
                "allOf": [
                  {
                    "$ref": "#/definitions/TruncatedChainId"
                  }
                ]
              },
              "queries": {
                "description": "Cosmos Query requests",
                "type": "array",
                "items": {
                  "$ref": "#/definitions/QueryRequest_for_ModuleQuery"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Only callable by Account Proxy Action on remote ibc host Which currently only support manager messages",
        "type": "object",
        "required": [
          "remote_action"
        ],
        "properties": {
          "remote_action": {
            "type": "object",
            "required": [
              "action",
              "host_chain"
            ],
            "properties": {
              "action": {
                "description": "execute the custom host function",
                "allOf": [
                  {
                    "$ref": "#/definitions/HostAction"
                  }
                ]
              },
              "host_chain": {
                "description": "host chain to be executed on Example: \"osmosis\"",
                "allOf": [
                  {
                    "$ref": "#/definitions/TruncatedChainId"
                  }
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Owner method: Remove connection for remote chain",
        "type": "object",
        "required": [
          "remove_host"
        ],
        "properties": {
          "remove_host": {
            "type": "object",
            "required": [
              "host_chain"
            ],
            "properties": {
              "host_chain": {
                "$ref": "#/definitions/TruncatedChainId"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Callback from the Polytone implementation This is triggered regardless of the execution result",
        "type": "object",
        "required": [
          "callback"
        ],
        "properties": {
          "callback": {
            "$ref": "#/definitions/CallbackMessage"
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "AccountId": {
        "description": "Unique identifier for an account. On each chain this is unique.",
        "type": "object",
        "required": [
          "seq",
          "trace"
        ],
        "properties": {
          "seq": {
            "description": "Unique identifier for the accounts create on a local chain. Is reused when creating an interchain account.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "trace": {
            "description": "Sequence of the chain that triggered the IBC account creation `AccountTrace::Local` if the account was created locally Example: Account created on Juno which has an abstract interchain account on Osmosis, which in turn creates an interchain account on Terra -> `AccountTrace::Remote(vec![\"juno\", \"osmosis\"])`",
            "allOf": [
              {
                "$ref": "#/definitions/AccountTrace"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "AccountTrace": {
        "description": "The identifier of chain that triggered the account creation",
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "local"
            ]
          },
          {
            "type": "object",
            "required": [
              "remote"
            ],
            "properties": {
              "remote": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/TruncatedChainId"
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Action": {
        "description": "Actions that can be taken to alter the contract's ownership",
        "oneOf": [
          {
            "description": "Propose to transfer the contract's ownership to another account, optionally with an expiry time.\n\nCan only be called by the contract's current owner.\n\nAny existing pending ownership transfer is overwritten.",
            "type": "object",
            "required": [
              "transfer_ownership"
            ],
            "properties": {
              "transfer_ownership": {
                "type": "object",
                "required": [
                  "new_owner"
                ],
                "properties": {
                  "expiry": {
                    "anyOf": [
                      {
                        "$ref": "#/definitions/Expiration"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "new_owner": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Accept the pending ownership transfer.\n\nCan only be called by the pending owner.",
            "type": "string",
            "enum": [
              "accept_ownership"
            ]
          },
          {
            "description": "Give up the contract's ownership and the possibility of appointing a new owner.\n\nCan only be invoked by the contract's current owner.\n\nAny existing pending ownership transfer is canceled.",
            "type": "string",
            "enum": [
              "renounce_ownership"
            ]
          }
        ]
      },
      "Addr": {
        "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
        "type": "string"
      },
      "AssetEntry": {
        "description": "An unchecked ANS asset entry. This is a string that is formatted as `src_chain>[intermediate_chain>]asset_name`",
        "type": "string"
      },
      "Attribute": {
        "description": "An key value pair that is used in the context of event attributes in logs",
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "BankQuery": {
        "oneOf": [
          {
            "description": "This calls into the native bank module for querying the total supply of one denomination. It does the same as the SupplyOf call in Cosmos SDK's RPC API. Return value is of type SupplyResponse.",
            "type": "object",
            "required": [
              "supply"
            ],
            "properties": {
              "supply": {
                "type": "object",
                "required": [
                  "denom"
                ],
                "properties": {
                  "denom": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "This calls into the native bank module for one denomination Return value is BalanceResponse",
            "type": "object",
            "required": [
              "balance"
            ],
            "properties": {
              "balance": {
                "type": "object",
                "required": [
                  "address",
                  "denom"
                ],
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "denom": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "This calls into the native bank module for all denominations. Note that this may be much more expensive than Balance and should be avoided if possible. Return value is AllBalanceResponse.",
            "type": "object",
            "required": [
              "all_balances"
            ],
            "properties": {
              "all_balances": {
                "type": "object",
                "required": [
                  "address"
                ],
                "properties": {
                  "address": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "This calls into the native bank module for querying metadata for a specific bank token. Return value is DenomMetadataResponse",
            "type": "object",
            "required": [
              "denom_metadata"
            ],
            "properties": {
              "denom_metadata": {
                "type": "object",
                "required": [
                  "denom"
                ],
                "properties": {
                  "denom": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "This calls into the native bank module for querying metadata for all bank tokens that have a metadata entry. Return value is AllDenomMetadataResponse",
            "type": "object",
            "required": [
              "all_denom_metadata"
            ],
            "properties": {
              "all_denom_metadata": {
                "type": "object",
                "properties": {
                  "pagination": {
                    "anyOf": [
                      {
                        "$ref": "#/definitions/PageRequest"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Binary": {
        "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
        "type": "string"
      },
      "Callback": {
        "description": "Callback from modules, that is turned into an IbcResponseMsg by the ibc client A callback can only be sent to itself",
        "type": "object",
        "required": [
          "msg"
        ],
        "properties": {
          "msg": {
            "description": "Used to add information to the callback. This is usually used to provide information to the ibc callback function for context",
            "allOf": [
              {
                "$ref": "#/definitions/Binary"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Callback2": {
        "oneOf": [
          {
            "description": "Result of executing the requested query, or an error.\n\nresult[i] corresponds to the i'th query and contains the base64 encoded query response.",
            "type": "object",
            "required": [
              "query"
            ],
            "properties": {
              "query": {
                "$ref": "#/definitions/Result_of_Array_of_Binary_or_ErrorResponse"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Result of executing the requested messages, or an error.\n\n14/04/23: if a submessage errors the reply handler can see `codespace: wasm, code: 5`, but not the actual error. as a result, we can't return good errors for Execution and this error string will only tell you the error's codespace. for example, an out-of-gas error is code 11 and looks like `codespace: sdk, code: 11`.",
            "type": "object",
            "required": [
              "execute"
            ],
            "properties": {
              "execute": {
                "$ref": "#/definitions/Result_of_ExecutionResponse_or_String"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "An error occured that could not be recovered from. The only known way that this can occur is message handling running out of gas, in which case the error will be `codespace: sdk, code: 11`.\n\nThis error is not named becuase it could also occur due to a panic or unhandled error during message processing. We don't expect this to happen and have carefully written the code to avoid it.",
            "type": "object",
            "required": [
              "fatal_error"
            ],
            "properties": {
              "fatal_error": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "CallbackMessage": {
        "description": "Executed on the callback receiver upon message completion. When being executed, the message will be tagged with \"callback\":\n\n```json {\"callback\": { \"initiator\": ..., \"initiator_msg\": ..., \"result\": ..., }} ```",
        "type": "object",
        "required": [
          "initiator",
          "initiator_msg",
          "result"
        ],
        "properties": {
          "initiator": {
            "description": "Initaitor on the note chain.",
            "allOf": [
              {
                "$ref": "#/definitions/Addr"
              }
            ]
          },
          "initiator_msg": {
            "description": "Message sent by the initaitor. This _must_ be base64 encoded or execution will fail.",
            "allOf": [
              {
                "$ref": "#/definitions/Binary"
              }
            ]
          },
          "result": {
            "description": "Data from the host chain.",
            "allOf": [
              {
                "$ref": "#/definitions/Callback2"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "CallbackMsg": {
        "description": "Callback message to set the dependencies after module upgrades.",
        "type": "object",
        "additionalProperties": false
      },
      "Coin": {
        "type": "object",
        "required": [
          "amount",
          "denom"
        ],
        "properties": {
          "amount": {
            "$ref": "#/definitions/Uint128"
          },
          "denom": {
            "type": "string"
          }
        }
      },
      "DistributionQuery": {
        "oneOf": [
          {
            "description": "See <https://github.com/cosmos/cosmos-sdk/blob/c74e2887b0b73e81d48c2f33e6b1020090089ee0/proto/cosmos/distribution/v1beta1/query.proto#L222-L230>",
            "type": "object",
            "required": [
              "delegator_withdraw_address"
            ],
            "properties": {
              "delegator_withdraw_address": {
                "type": "object",
                "required": [
                  "delegator_address"
                ],
                "properties": {
                  "delegator_address": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "See <https://github.com/cosmos/cosmos-sdk/blob/c74e2887b0b73e81d48c2f33e6b1020090089ee0/proto/cosmos/distribution/v1beta1/query.proto#L157-L167>",
            "type": "object",
            "required": [
              "delegation_rewards"
            ],
            "properties": {
              "delegation_rewards": {
                "type": "object",
                "required": [
                  "delegator_address",
                  "validator_address"
                ],
                "properties": {
                  "delegator_address": {
                    "type": "string"
                  },
                  "validator_address": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "See <https://github.com/cosmos/cosmos-sdk/blob/c74e2887b0b73e81d48c2f33e6b1020090089ee0/proto/cosmos/distribution/v1beta1/query.proto#L180-L187>",
            "type": "object",
            "required": [
              "delegation_total_rewards"
            ],
            "properties": {
              "delegation_total_rewards": {
                "type": "object",
                "required": [
                  "delegator_address"
                ],
                "properties": {
                  "delegator_address": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "See <https://github.com/cosmos/cosmos-sdk/blob/b0acf60e6c39f7ab023841841fc0b751a12c13ff/proto/cosmos/distribution/v1beta1/query.proto#L202-L210>",
            "type": "object",
            "required": [
              "delegator_validators"
            ],
            "properties": {
              "delegator_validators": {
                "type": "object",
                "required": [
                  "delegator_address"
                ],
                "properties": {
                  "delegator_address": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "error",
          "message_index"
        ],
        "properties": {
          "error": {
            "description": "The error that occured executing the message.",
            "type": "string"
          },
          "message_index": {
            "description": "The index of the first message who's execution failed.",
            "allOf": [
              {
                "$ref": "#/definitions/Uint64"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "Event": {
        "description": "A full [*Cosmos SDK* event].\n\nThis version uses string attributes (similar to [*Cosmos SDK* StringEvent]), which then get magically converted to bytes for Tendermint somewhere between the Rust-Go interface, JSON deserialization and the `NewEvent` call in Cosmos SDK.\n\n[*Cosmos SDK* event]: https://docs.cosmos.network/main/learn/advanced/events [*Cosmos SDK* StringEvent]: https://github.com/cosmos/cosmos-sdk/blob/v0.42.5/proto/cosmos/base/abci/v1beta1/abci.proto#L56-L70",
        "type": "object",
        "required": [
          "attributes",
          "type"
        ],
        "properties": {
          "attributes": {
            "description": "The attributes to be included in the event.\n\nYou can learn more about these from [*Cosmos SDK* docs].\n\n[*Cosmos SDK* docs]: https://docs.cosmos.network/main/learn/advanced/events",
            "type": "array",
            "items": {
              "$ref": "#/definitions/Attribute"
            }
          },
          "type": {
            "description": "The event type. This is renamed to \"ty\" because \"type\" is reserved in Rust. This sucks, we know.",
            "type": "string"
          }
        }
      },
      "ExecuteMsg": {
        "description": "Manager execute messages",
        "oneOf": [
          {
            "description": "Forward execution message to module",
            "type": "object",
            "required": [
              "exec_on_module"
            ],
            "properties": {
              "exec_on_module": {
                "type": "object",
                "required": [
                  "exec_msg",
                  "module_id"
                ],
                "properties": {
                  "exec_msg": {
                    "$ref": "#/definitions/Binary"
                  },
                  "module_id": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Update Abstract-specific configuration of the module. Only callable by the account factory or owner.",
            "type": "object",
            "required": [
              "update_internal_config"
            ],
            "properties": {
              "update_internal_config": {
                "$ref": "#/definitions/Binary"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Install module using module factory, callable by Owner",
            "type": "object",
            "required": [
              "install_modules"
            ],
            "properties": {
              "install_modules": {
                "type": "object",
                "required": [
                  "modules"
                ],
                "properties": {
                  "modules": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ModuleInstallConfig"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Uninstall a module given its ID.",
            "type": "object",
            "required": [
              "uninstall_module"
            ],
            "properties": {
              "uninstall_module": {
                "type": "object",
                "required": [
                  "module_id"
                ],
                "properties": {
                  "module_id": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Upgrade the module to a new version If module is `abstract::manager` then the contract will do a self-migration.",
            "type": "object",
            "required": [
              "upgrade"
            ],
            "properties": {
              "upgrade": {
                "type": "object",
                "required": [
                  "modules"
                ],
                "properties": {
                  "modules": {
                    "type": "array",
                    "items": {
                      "type": "array",
                      "items": [
                        {
                          "$ref": "#/definitions/ModuleInfo"
                        },
                        {
                          "anyOf": [
                            {
                              "$ref": "#/definitions/Binary"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      ],
                      "maxItems": 2,
                      "minItems": 2
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Creates a sub-account on the account",
            "type": "object",
            "required": [
              "create_sub_account"
            ],
            "properties": {
              "create_sub_account": {
                "type": "object",
                "required": [
                  "install_modules",
                  "name"
                ],
                "properties": {
                  "account_id": {
                    "description": "If `None`, will create a new local account without asserting account-id.\n\nWhen provided sequence in 0..2147483648 range: The tx will error When provided sequence in 2147483648..u32::MAX range: Signals use of unclaimed Account Id in this range. The tx will error if this account-id already claimed. Useful for instantiate2 address prediction.",
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "uint32",
                    "minimum": 0.0
                  },
                  "base_asset": {
                    "anyOf": [
                      {
                        "$ref": "#/definitions/AssetEntry"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "description": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "install_modules": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ModuleInstallConfig"
                    }
                  },
                  "link": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Update info",
            "type": "object",
            "required": [
              "update_info"
            ],
            "properties": {
              "update_info": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "link": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Update account statuses",
            "type": "object",
            "required": [
              "update_status"
            ],
            "properties": {
              "update_status": {
                "type": "object",
                "properties": {
                  "is_suspended": {
                    "type": [
                      "boolean",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Actions called by internal or external sub-accounts",
            "type": "object",
            "required": [
              "update_sub_account"
            ],
            "properties": {
              "update_sub_account": {
                "$ref": "#/definitions/UpdateSubAccountAction"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Callback endpoint",
            "type": "object",
            "required": [
              "callback"
            ],
            "properties": {
              "callback": {
                "$ref": "#/definitions/CallbackMsg"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Update the contract's ownership. The `action` can propose transferring ownership to an account, accept a pending ownership transfer, or renounce the ownership of the account permanently.",
            "type": "object",
            "required": [
              "update_ownership"
            ],
            "properties": {
              "update_ownership": {
                "$ref": "#/definitions/GovAction"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "ExecutionResponse": {
        "type": "object",
        "required": [
          "executed_by",
          "result"
        ],
        "properties": {
          "executed_by": {
            "description": "The address on the remote chain that executed the messages.",
            "type": "string"
          },
          "result": {
            "description": "Index `i` corresponds to the result of executing the `i`th message.",
            "type": "array",
            "items": {
              "$ref": "#/definitions/SubMsgResponse"
            }
          }
        },
        "additionalProperties": false
      },
      "Expiration": {
        "description": "Expiration represents a point in time when some event happens. It can compare with a BlockInfo and will return is_expired() == true once the condition is hit (and for every block in the future)",
        "oneOf": [
          {
            "description": "AtHeight will expire when `env.block.height` >= height",
            "type": "object",
            "required": [
              "at_height"
            ],
            "properties": {
              "at_height": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          },
          {
            "description": "AtTime will expire when `env.block.time` >= time",
            "type": "object",
            "required": [
              "at_time"
            ],
            "properties": {
              "at_time": {
                "$ref": "#/definitions/Timestamp"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Never will never expire. Used to express the empty variant",
            "type": "object",
            "required": [
              "never"
            ],
            "properties": {
              "never": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "GovAction": {
        "description": "Actions that can be taken to alter the contract's governance ownership",
        "oneOf": [
          {
            "description": "Propose to transfer the contract's ownership to another account, optionally with an expiry time.\n\nCan only be called by the contract's current owner.\n\nAny existing pending ownership transfer is overwritten.",
            "type": "object",
            "required": [
              "transfer_ownership"
            ],
            "properties": {
              "transfer_ownership": {
                "type": "object",
                "required": [
                  "new_owner"
                ],
                "properties": {
                  "expiry": {
                    "anyOf": [
                      {
                        "$ref": "#/definitions/Expiration"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "new_owner": {
                    "$ref": "#/definitions/GovernanceDetails_for_String"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Accept the pending ownership transfer.\n\nCan only be called by the pending owner.",
            "type": "string",
            "enum": [
              "accept_ownership"
            ]
          },
          {
            "description": "Give up the contract's ownership and the possibility of appointing a new owner.\n\nCan only be invoked by the contract's current owner.\n\nAny existing pending ownership transfer is canceled.",
            "type": "string",
            "enum": [
              "renounce_ownership"
            ]
          }
        ]
      },
      "GovernanceDetails_for_String": {
        "description": "Governance types",
        "oneOf": [
          {
            "description": "A single address is admin",
            "type": "object",
            "required": [
              "Monarchy"
            ],
            "properties": {
              "Monarchy": {
                "type": "object",
                "required": [
                  "monarch"
                ],
                "properties": {
                  "monarch": {
                    "description": "The monarch's address",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Used when the account is a sub-account of another account.",
            "type": "object",
            "required": [
              "SubAccount"
            ],
            "properties": {
              "SubAccount": {
                "type": "object",
                "required": [
                  "manager",
                  "proxy"
                ],
                "properties": {
                  "manager": {
                    "description": "The manager of the account of which this account is the sub-account.",
                    "type": "string"
                  },
                  "proxy": {
                    "description": "The proxy of the account of which this account is the sub-account.",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "An external governance source",
            "type": "object",
            "required": [
              "External"
            ],
            "properties": {
              "External": {
                "type": "object",
                "required": [
                  "governance_address",
                  "governance_type"
                ],
                "properties": {
                  "governance_address": {
                    "description": "The external contract address",
                    "type": "string"
                  },
                  "governance_type": {
                    "description": "Governance type used for doing extra off-chain queries depending on the type.",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Renounced account This account no longer has an owner and cannot be used.",
            "type": "object",
            "required": [
              "Renounced"
            ],
            "properties": {
              "Renounced": {
                "type": "object"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "NFT"
            ],
            "properties": {
              "NFT": {
                "type": "object",
                "required": [
                  "collection_addr",
                  "token_id"
                ],
                "properties": {
                  "collection_addr": {
                    "type": "string"
                  },
                  "token_id": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "HelperAction": {
        "oneOf": [
          {
            "description": "What do we need here ? TODO",
            "type": "string",
            "enum": [
              "send_all_back"
            ]
          }
        ]
      },
      "HostAction": {
        "description": "Callable actions on a remote host",
        "oneOf": [
          {
            "type": "object",
            "required": [
              "dispatch"
            ],
            "properties": {
              "dispatch": {
                "type": "object",
                "required": [
                  "manager_msgs"
                ],
                "properties": {
                  "manager_msgs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ExecuteMsg"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Can't be called by an account directly. These are permissioned messages that only the IBC Client is allowed to call by itself.",
            "type": "object",
            "required": [
              "internal"
            ],
            "properties": {
              "internal": {
                "$ref": "#/definitions/InternalAction"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Some helpers that allow calling dispatch messages faster (for actions that are called regularly)",
            "type": "object",
            "required": [
              "helpers"
            ],
            "properties": {
              "helpers": {
                "$ref": "#/definitions/HelperAction"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "IbcQuery": {
        "description": "These are queries to the various IBC modules to see the state of the contract's IBC connection. These will return errors if the contract is not \"ibc enabled\"",
        "oneOf": [
          {
            "description": "Gets the Port ID the current contract is bound to.\n\nReturns a `PortIdResponse`.",
            "type": "object",
            "required": [
              "port_id"
            ],
            "properties": {
              "port_id": {
                "type": "object"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Lists all channels that are bound to a given port. If `port_id` is omitted, this list all channels bound to the contract's port.\n\nReturns a `ListChannelsResponse`.",
            "type": "object",
            "required": [
              "list_channels"
            ],
            "properties": {
              "list_channels": {
                "type": "object",
                "properties": {
                  "port_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Lists all information for a (portID, channelID) pair. If port_id is omitted, it will default to the contract's own channel. (To save a PortId{} call)\n\nReturns a `ChannelResponse`.",
            "type": "object",
            "required": [
              "channel"
            ],
            "properties": {
              "channel": {
                "type": "object",
                "required": [
                  "channel_id"
                ],
                "properties": {
                  "channel_id": {
                    "type": "string"
                  },
                  "port_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "InstalledModuleIdentification": {
        "description": "This is used for identifying calling modules For adapters, we don't need the account id because it's independent of an account For apps and standalone, the account id is used to identify the calling module",
        "type": "object",
        "required": [
          "module_info"
        ],
        "properties": {
          "account_id": {
            "anyOf": [
              {
                "$ref": "#/definitions/AccountId"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_info": {
            "$ref": "#/definitions/ModuleInfo"
          }
        },
        "additionalProperties": false
      },
      "InternalAction": {
        "oneOf": [
          {
            "description": "Registers a new account from a remote chain",
            "type": "object",
            "required": [
              "register"
            ],
            "properties": {
              "register": {
                "type": "object",
                "required": [
                  "install_modules",
                  "name"
                ],
                "properties": {
                  "base_asset": {
                    "anyOf": [
                      {
                        "$ref": "#/definitions/AssetEntry"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "description": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "install_modules": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ModuleInstallConfig"
                    }
                  },
                  "link": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "ModuleInfo": {
        "description": "Stores the namespace, name, and version of an Abstract module.",
        "type": "object",
        "required": [
          "name",
          "namespace",
          "version"
        ],
        "properties": {
          "name": {
            "description": "Name of the contract",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace of the module",
            "allOf": [
              {
                "$ref": "#/definitions/Namespace"
              }
            ]
          },
          "version": {
            "description": "Version of the module",
            "allOf": [
              {
                "$ref": "#/definitions/ModuleVersion"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ModuleInstallConfig": {
        "description": "Module info and init message",
        "type": "object",
        "required": [
          "module"
        ],
        "properties": {
          "init_msg": {
            "anyOf": [
              {
                "$ref": "#/definitions/Binary"
              },
              {
                "type": "null"
              }
            ]
          },
          "module": {
            "$ref": "#/definitions/ModuleInfo"
          }
        },
        "additionalProperties": false
      },
      "ModuleQuery": {
        "type": "object",
        "required": [
          "msg",
          "target_module"
        ],
        "properties": {
          "msg": {
            "description": "The WasmQuery::Smart request to the module",
            "allOf": [
              {
                "$ref": "#/definitions/Binary"
              }
            ]
          },
          "target_module": {
            "description": "Information about the module that gets queried through ibc",
            "allOf": [
              {
                "$ref": "#/definitions/InstalledModuleIdentification"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ModuleVersion": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "latest"
            ]
          },
          {
            "type": "object",
            "required": [
              "version"
            ],
            "properties": {
              "version": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Namespace": {
        "description": "Represents an Abstract namespace for modules",
        "type": "string"
      },
      "PageRequest": {
        "description": "Simplified version of the PageRequest type for pagination from the cosmos-sdk",
        "type": "object",
        "required": [
          "limit",
          "reverse"
        ],
        "properties": {
          "key": {
            "anyOf": [
              {
                "$ref": "#/definitions/Binary"
              },
              {
                "type": "null"
              }
            ]
          },
          "limit": {
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "reverse": {
            "type": "boolean"
          }
        }
      },
      "QueryRequest_for_ModuleQuery": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "bank"
            ],
            "properties": {
              "bank": {
                "$ref": "#/definitions/BankQuery"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "custom"
            ],
            "properties": {
              "custom": {
                "$ref": "#/definitions/ModuleQuery"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "staking"
            ],
            "properties": {
              "staking": {
                "$ref": "#/definitions/StakingQuery"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "distribution"
            ],
            "properties": {
              "distribution": {
                "$ref": "#/definitions/DistributionQuery"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "A Stargate query is encoded the same way as abci_query, with path and protobuf encoded request data. The format is defined in [ADR-21](https://github.com/cosmos/cosmos-sdk/blob/master/docs/architecture/adr-021-protobuf-query-encoding.md). The response is protobuf encoded data directly without a JSON response wrapper. The caller is responsible for compiling the proper protobuf definitions for both requests and responses.",
            "type": "object",
            "required": [
              "stargate"
            ],
            "properties": {
              "stargate": {
                "type": "object",
                "required": [
                  "data",
                  "path"
                ],
                "properties": {
                  "data": {
                    "description": "this is the expected protobuf message type (not any), binary encoded",
                    "allOf": [
                      {
                        "$ref": "#/definitions/Binary"
                      }
                    ]
                  },
                  "path": {
                    "description": "this is the fully qualified service path used for routing, eg. custom/cosmos_sdk.x.bank.v1.Query/QueryBalance",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "ibc"
            ],
            "properties": {
              "ibc": {
                "$ref": "#/definitions/IbcQuery"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "wasm"
            ],
            "properties": {
              "wasm": {
                "$ref": "#/definitions/WasmQuery"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Result_of_Array_of_Binary_or_ErrorResponse": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "Ok"
            ],
            "properties": {
              "Ok": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/Binary"
                }
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Err"
            ],
            "properties": {
              "Err": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        ]
      },
      "Result_of_ExecutionResponse_or_String": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "Ok"
            ],
            "properties": {
              "Ok": {
                "$ref": "#/definitions/ExecutionResponse"
              }
            }
          },
          {
            "type": "object",
            "required": [
              "Err"
            ],
            "properties": {
              "Err": {
                "type": "string"
              }
            }
          }
        ]
      },
      "StakingQuery": {
        "oneOf": [
          {
            "description": "Returns the denomination that can be bonded (if there are multiple native tokens on the chain)",
            "type": "object",
            "required": [
              "bonded_denom"
            ],
            "properties": {
              "bonded_denom": {
                "type": "object"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "AllDelegations will return all delegations by the delegator",
            "type": "object",
            "required": [
              "all_delegations"
            ],
            "properties": {
              "all_delegations": {
                "type": "object",
                "required": [
                  "delegator"
                ],
                "properties": {
                  "delegator": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Delegation will return more detailed info on a particular delegation, defined by delegator/validator pair",
            "type": "object",
            "required": [
              "delegation"
            ],
            "properties": {
              "delegation": {
                "type": "object",
                "required": [
                  "delegator",
                  "validator"
                ],
                "properties": {
                  "delegator": {
                    "type": "string"
                  },
                  "validator": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns all validators in the currently active validator set.\n\nThe query response type is `AllValidatorsResponse`.",
            "type": "object",
            "required": [
              "all_validators"
            ],
            "properties": {
              "all_validators": {
                "type": "object"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns the validator at the given address. Returns None if the validator is not part of the currently active validator set.\n\nThe query response type is `ValidatorResponse`.",
            "type": "object",
            "required": [
              "validator"
            ],
            "properties": {
              "validator": {
                "type": "object",
                "required": [
                  "address"
                ],
                "properties": {
                  "address": {
                    "description": "The validator's address (e.g. (e.g. cosmosvaloper1...))",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "SubMsgResponse": {
        "description": "The information we get back from a successful sub message execution, with full Cosmos SDK events.",
        "type": "object",
        "required": [
          "events"
        ],
        "properties": {
          "data": {
            "anyOf": [
              {
                "$ref": "#/definitions/Binary"
              },
              {
                "type": "null"
              }
            ]
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Event"
            }
          }
        }
      },
      "Timestamp": {
        "description": "A point in time in nanosecond precision.\n\nThis type can represent times from 1970-01-01T00:00:00Z to 2554-07-21T23:34:33Z.\n\n## Examples\n\n``` # use cosmwasm_std::Timestamp; let ts = Timestamp::from_nanos(1_000_000_202); assert_eq!(ts.nanos(), 1_000_000_202); assert_eq!(ts.seconds(), 1); assert_eq!(ts.subsec_nanos(), 202);\n\nlet ts = ts.plus_seconds(2); assert_eq!(ts.nanos(), 3_000_000_202); assert_eq!(ts.seconds(), 3); assert_eq!(ts.subsec_nanos(), 202); ```",
        "allOf": [
          {
            "$ref": "#/definitions/Uint64"
          }
        ]
      },
      "TruncatedChainId": {
        "description": "The name of a chain, aka the chain-id without the post-fix number. ex. `cosmoshub-4` -> `cosmoshub`, `juno-1` -> `juno`",
        "type": "string"
      },
      "Uint128": {
        "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
        "type": "string"
      },
      "Uint64": {
        "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
        "type": "string"
      },
      "UpdateSubAccountAction": {
        "oneOf": [
          {
            "description": "Unregister sub-account It will unregister sub-account from the state Could be called only by the sub-account itself",
            "type": "object",
            "required": [
              "unregister_sub_account"
            ],
            "properties": {
              "unregister_sub_account": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "uint32",
                    "minimum": 0.0
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Register sub-account It will register new sub-account into the state Could be called by the sub-account manager Note: since it happens after the claim by this manager state won't have spam accounts",
            "type": "object",
            "required": [
              "register_sub_account"
            ],
            "properties": {
              "register_sub_account": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "uint32",
                    "minimum": 0.0
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "WasmQuery": {
        "oneOf": [
          {
            "description": "this queries the public API of another contract at a known address (with known ABI) Return value is whatever the contract returns (caller should know), wrapped in a ContractResult that is JSON encoded.",
            "type": "object",
            "required": [
              "smart"
            ],
            "properties": {
              "smart": {
                "type": "object",
                "required": [
                  "contract_addr",
                  "msg"
                ],
                "properties": {
                  "contract_addr": {
                    "type": "string"
                  },
                  "msg": {
                    "description": "msg is the json-encoded QueryMsg struct",
                    "allOf": [
                      {
                        "$ref": "#/definitions/Binary"
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "this queries the raw kv-store of the contract. returns the raw, unparsed data stored at that key, which may be an empty vector if not present",
            "type": "object",
            "required": [
              "raw"
            ],
            "properties": {
              "raw": {
                "type": "object",
                "required": [
                  "contract_addr",
                  "key"
                ],
                "properties": {
                  "contract_addr": {
                    "type": "string"
                  },
                  "key": {
                    "description": "Key is the raw key used in the contracts Storage",
                    "allOf": [
                      {
                        "$ref": "#/definitions/Binary"
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns a [`ContractInfoResponse`] with metadata on the contract from the runtime",
            "type": "object",
            "required": [
              "contract_info"
            ],
            "properties": {
              "contract_info": {
                "type": "object",
                "required": [
                  "contract_addr"
                ],
                "properties": {
                  "contract_addr": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns a [`CodeInfoResponse`] with metadata of the code",
            "type": "object",
            "required": [
              "code_info"
            ],
            "properties": {
              "code_info": {
                "type": "object",
                "required": [
                  "code_id"
                ],
                "properties": {
                  "code_id": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "description": "Queries the ownership of the ibc client contract Returns [`cw_ownable::Ownership<Addr>`]",
        "type": "object",
        "required": [
          "ownership"
        ],
        "properties": {
          "ownership": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Returns config Returns [`ConfigResponse`]",
        "type": "object",
        "required": [
          "config"
        ],
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Returns the host information associated with a specific chain-name (e.g. osmosis, juno) Returns [`HostResponse`]",
        "type": "object",
        "required": [
          "host"
        ],
        "properties": {
          "host": {
            "type": "object",
            "required": [
              "chain_name"
            ],
            "properties": {
              "chain_name": {
                "$ref": "#/definitions/TruncatedChainId"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Get list of remote accounts Returns [`ListAccountsResponse`]",
        "type": "object",
        "required": [
          "list_accounts"
        ],
        "properties": {
          "list_accounts": {
            "type": "object",
            "properties": {
              "limit": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint32",
                "minimum": 0.0
              },
              "start": {
                "type": [
                  "array",
                  "null"
                ],
                "items": [
                  {
                    "$ref": "#/definitions/AccountId"
                  },
                  {
                    "type": "string"
                  }
                ],
                "maxItems": 2,
                "minItems": 2
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Get remote proxy address for one chain Returns [`AccountResponse`]",
        "type": "object",
        "required": [
          "account"
        ],
        "properties": {
          "account": {
            "type": "object",
            "required": [
              "account_id",
              "chain_name"
            ],
            "properties": {
              "account_id": {
                "$ref": "#/definitions/AccountId"
              },
              "chain_name": {
                "$ref": "#/definitions/TruncatedChainId"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Get the hosts Returns [`ListRemoteHostsResponse`]",
        "type": "object",
        "required": [
          "list_remote_hosts"
        ],
        "properties": {
          "list_remote_hosts": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Get the IBC execution proxies Returns [`ListRemoteProxiesResponse`]",
        "type": "object",
        "required": [
          "list_remote_proxies"
        ],
        "properties": {
          "list_remote_proxies": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Get the IBC execution proxies based on the account id passed Returns [`ListRemoteProxiesResponse`]",
        "type": "object",
        "required": [
          "list_remote_proxies_by_account_id"
        ],
        "properties": {
          "list_remote_proxies_by_account_id": {
            "type": "object",
            "required": [
              "account_id"
            ],
            "properties": {
              "account_id": {
                "$ref": "#/definitions/AccountId"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Get the IBC counterparts connected to this abstract ibc client Returns [`ListIbcInfrastructureResponse`]",
        "type": "object",
        "required": [
          "list_ibc_infrastructures"
        ],
        "properties": {
          "list_ibc_infrastructures": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "AccountId": {
        "description": "Unique identifier for an account. On each chain this is unique.",
        "type": "object",
        "required": [
          "seq",
          "trace"
        ],
        "properties": {
          "seq": {
            "description": "Unique identifier for the accounts create on a local chain. Is reused when creating an interchain account.",
            "type": "integer",
            "format": "uint32",
            "minimum": 0.0
          },
          "trace": {
            "description": "Sequence of the chain that triggered the IBC account creation `AccountTrace::Local` if the account was created locally Example: Account created on Juno which has an abstract interchain account on Osmosis, which in turn creates an interchain account on Terra -> `AccountTrace::Remote(vec![\"juno\", \"osmosis\"])`",
            "allOf": [
              {
                "$ref": "#/definitions/AccountTrace"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "AccountTrace": {
        "description": "The identifier of chain that triggered the account creation",
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "local"
            ]
          },
          {
            "type": "object",
            "required": [
              "remote"
            ],
            "properties": {
              "remote": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/TruncatedChainId"
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "TruncatedChainId": {
        "description": "The name of a chain, aka the chain-id without the post-fix number. ex. `cosmoshub-4` -> `cosmoshub`, `juno-1` -> `juno`",
        "type": "string"
      }
    }
  },
  "migrate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "MigrateMsg",
    "type": "object",
    "additionalProperties": false
  },
  "sudo": null,
  "responses": {
    "account": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AccountResponse",
      "type": "object",
      "properties": {
        "remote_proxy_addr": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "config": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ConfigResponse",
      "type": "object",
      "required": [
        "ans_host",
        "version_control_address"
      ],
      "properties": {
        "ans_host": {
          "type": "string"
        },
        "version_control_address": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "host": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "HostResponse",
      "type": "object",
      "required": [
        "remote_host"
      ],
      "properties": {
        "remote_host": {
          "type": "string"
        },
        "remote_polytone_proxy": {
          "type": [
            "string",
            "null"
          ]
        }
      },
      "additionalProperties": false
    },
    "list_accounts": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ListAccountsResponse",
      "type": "object",
      "required": [
        "accounts"
      ],
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              {
                "$ref": "#/definitions/AccountId"
              },
              {
                "$ref": "#/definitions/TruncatedChainId"
              },
              {
                "type": "string"
              }
            ],
            "maxItems": 3,
            "minItems": 3
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "AccountId": {
          "description": "Unique identifier for an account. On each chain this is unique.",
          "type": "object",
          "required": [
            "seq",
            "trace"
          ],
          "properties": {
            "seq": {
              "description": "Unique identifier for the accounts create on a local chain. Is reused when creating an interchain account.",
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "trace": {
              "description": "Sequence of the chain that triggered the IBC account creation `AccountTrace::Local` if the account was created locally Example: Account created on Juno which has an abstract interchain account on Osmosis, which in turn creates an interchain account on Terra -> `AccountTrace::Remote(vec![\"juno\", \"osmosis\"])`",
              "allOf": [
                {
                  "$ref": "#/definitions/AccountTrace"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        "AccountTrace": {
          "description": "The identifier of chain that triggered the account creation",
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "local"
              ]
            },
            {
              "type": "object",
              "required": [
                "remote"
              ],
              "properties": {
                "remote": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TruncatedChainId"
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "TruncatedChainId": {
          "description": "The name of a chain, aka the chain-id without the post-fix number. ex. `cosmoshub-4` -> `cosmoshub`, `juno-1` -> `juno`",
          "type": "string"
        }
      }
    },
    "list_ibc_infrastructures": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ListIbcInfrastructureResponse",
      "type": "object",
      "required": [
        "counterparts"
      ],
      "properties": {
        "counterparts": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              {
                "$ref": "#/definitions/TruncatedChainId"
              },
              {
                "$ref": "#/definitions/IbcInfrastructure"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Addr": {
          "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
          "type": "string"
        },
        "IbcInfrastructure": {
          "description": "Information about the deployed infrastructure we're connected to.",
          "type": "object",
          "required": [
            "polytone_note",
            "remote_abstract_host"
          ],
          "properties": {
            "polytone_note": {
              "description": "Address of the polytone note deployed on the local chain. This contract will forward the messages for us.",
              "allOf": [
                {
                  "$ref": "#/definitions/Addr"
                }
              ]
            },
            "remote_abstract_host": {
              "description": "The address of the abstract host deployed on the remote chain. This address will be called with our packet.",
              "type": "string"
            },
            "remote_proxy": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        },
        "TruncatedChainId": {
          "description": "The name of a chain, aka the chain-id without the post-fix number. ex. `cosmoshub-4` -> `cosmoshub`, `juno-1` -> `juno`",
          "type": "string"
        }
      }
    },
    "list_remote_hosts": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ListRemoteHostsResponse",
      "type": "object",
      "required": [
        "hosts"
      ],
      "properties": {
        "hosts": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              {
                "$ref": "#/definitions/TruncatedChainId"
              },
              {
                "type": "string"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "TruncatedChainId": {
          "description": "The name of a chain, aka the chain-id without the post-fix number. ex. `cosmoshub-4` -> `cosmoshub`, `juno-1` -> `juno`",
          "type": "string"
        }
      }
    },
    "list_remote_proxies": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ListRemoteProxiesResponse",
      "type": "object",
      "required": [
        "proxies"
      ],
      "properties": {
        "proxies": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              {
                "$ref": "#/definitions/TruncatedChainId"
              },
              {
                "type": [
                  "string",
                  "null"
                ]
              }
            ],
            "maxItems": 2,
            "minItems": 2
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "TruncatedChainId": {
          "description": "The name of a chain, aka the chain-id without the post-fix number. ex. `cosmoshub-4` -> `cosmoshub`, `juno-1` -> `juno`",
          "type": "string"
        }
      }
    },
    "list_remote_proxies_by_account_id": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ListRemoteProxiesResponse",
      "type": "object",
      "required": [
        "proxies"
      ],
      "properties": {
        "proxies": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              {
                "$ref": "#/definitions/TruncatedChainId"
              },
              {
                "type": [
                  "string",
                  "null"
                ]
              }
            ],
            "maxItems": 2,
            "minItems": 2
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "TruncatedChainId": {
          "description": "The name of a chain, aka the chain-id without the post-fix number. ex. `cosmoshub-4` -> `cosmoshub`, `juno-1` -> `juno`",
          "type": "string"
        }
      }
    },
    "ownership": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Ownership_for_Addr",
      "description": "The contract's ownership info",
      "type": "object",
      "properties": {
        "owner": {
          "description": "The contract's current owner. `None` if the ownership has been renounced.",
          "anyOf": [
            {
              "$ref": "#/definitions/Addr"
            },
            {
              "type": "null"
            }
          ]
        },
        "pending_expiry": {
          "description": "The deadline for the pending owner to accept the ownership. `None` if there isn't a pending ownership transfer, or if a transfer exists and it doesn't have a deadline.",
          "anyOf": [
            {
              "$ref": "#/definitions/Expiration"
            },
            {
              "type": "null"
            }
          ]
        },
        "pending_owner": {
          "description": "The account who has been proposed to take over the ownership. `None` if there isn't a pending ownership transfer.",
          "anyOf": [
            {
              "$ref": "#/definitions/Addr"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Addr": {
          "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
          "type": "string"
        },
        "Expiration": {
          "description": "Expiration represents a point in time when some event happens. It can compare with a BlockInfo and will return is_expired() == true once the condition is hit (and for every block in the future)",
          "oneOf": [
            {
              "description": "AtHeight will expire when `env.block.height` >= height",
              "type": "object",
              "required": [
                "at_height"
              ],
              "properties": {
                "at_height": {
                  "type": "integer",
                  "format": "uint64",
                  "minimum": 0.0
                }
              },
              "additionalProperties": false
            },
            {
              "description": "AtTime will expire when `env.block.time` >= time",
              "type": "object",
              "required": [
                "at_time"
              ],
              "properties": {
                "at_time": {
                  "$ref": "#/definitions/Timestamp"
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Never will never expire. Used to express the empty variant",
              "type": "object",
              "required": [
                "never"
              ],
              "properties": {
                "never": {
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          ]
        },
        "Timestamp": {
          "description": "A point in time in nanosecond precision.\n\nThis type can represent times from 1970-01-01T00:00:00Z to 2554-07-21T23:34:33Z.\n\n## Examples\n\n``` # use cosmwasm_std::Timestamp; let ts = Timestamp::from_nanos(1_000_000_202); assert_eq!(ts.nanos(), 1_000_000_202); assert_eq!(ts.seconds(), 1); assert_eq!(ts.subsec_nanos(), 202);\n\nlet ts = ts.plus_seconds(2); assert_eq!(ts.nanos(), 3_000_000_202); assert_eq!(ts.seconds(), 3); assert_eq!(ts.subsec_nanos(), 202); ```",
          "allOf": [
            {
              "$ref": "#/definitions/Uint64"
            }
          ]
        },
        "Uint64": {
          "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
          "type": "string"
        }
      }
    }
  }
}
