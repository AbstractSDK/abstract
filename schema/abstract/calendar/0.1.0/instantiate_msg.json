{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "InstantiateMsg",
  "type": "object",
  "required": [
    "base",
    "module"
  ],
  "properties": {
    "base": {
      "description": "base instantiate information",
      "allOf": [
        {
          "$ref": "#/definitions/BaseInstantiateMsg"
        }
      ]
    },
    "module": {
      "description": "custom instantiate msg",
      "allOf": [
        {
          "$ref": "#/definitions/AppInstantiateMsg"
        }
      ]
    }
  },
  "additionalProperties": false,
  "definitions": {
    "AppInstantiateMsg": {
      "type": "object",
      "required": [
        "denom",
        "end_time",
        "price_per_minute",
        "start_time",
        "utc_offset"
      ],
      "properties": {
        "denom": {
          "description": "The denom of the staked asset.",
          "allOf": [
            {
              "$ref": "#/definitions/AssetEntry"
            }
          ]
        },
        "end_time": {
          "description": "The end time for each day that meetings can be scheduled.",
          "allOf": [
            {
              "$ref": "#/definitions/Time"
            }
          ]
        },
        "price_per_minute": {
          "description": "The price per minute charged to determine the amount of stake necessary to request a meeting for a given length.",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "start_time": {
          "description": "The start time for each day that meetings can be scheduled.",
          "allOf": [
            {
              "$ref": "#/definitions/Time"
            }
          ]
        },
        "utc_offset": {
          "description": "The utc offset of the timezone.",
          "type": "integer",
          "format": "int32"
        }
      },
      "additionalProperties": false
    },
    "AssetEntry": {
      "description": "An unchecked ANS asset entry. This is a string that is formatted as `src_chain>[intermediate_chain>]asset_name`",
      "type": "string"
    },
    "BaseInstantiateMsg": {
      "description": "Used by Module Factory to instantiate App",
      "type": "object",
      "required": [
        "ans_host_address",
        "version_control_address"
      ],
      "properties": {
        "ans_host_address": {
          "type": "string"
        },
        "version_control_address": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Time": {
      "description": "App instantiate message",
      "type": "object",
      "required": [
        "hour",
        "minute"
      ],
      "properties": {
        "hour": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "minute": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
