{
  "contract_name": "proxy",
  "contract_version": "0.5.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "ans_host_address",
      "os_id"
    ],
    "properties": {
      "ans_host_address": {
        "type": "string"
      },
      "os_id": {
        "type": "integer",
        "format": "uint32",
        "minimum": 0.0
      }
    },
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "description": "Sets the admin",
        "type": "object",
        "required": [
          "set_admin"
        ],
        "properties": {
          "set_admin": {
            "type": "object",
            "required": [
              "admin"
            ],
            "properties": {
              "admin": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Executes the provided messages if sender is whitelisted",
        "type": "object",
        "required": [
          "module_action"
        ],
        "properties": {
          "module_action": {
            "type": "object",
            "required": [
              "msgs"
            ],
            "properties": {
              "msgs": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/CosmosMsg_for_Empty"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Execute IBC action on Client",
        "type": "object",
        "required": [
          "ibc_action"
        ],
        "properties": {
          "ibc_action": {
            "type": "object",
            "required": [
              "msgs"
            ],
            "properties": {
              "msgs": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/ExecuteMsg"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Adds the provided address to whitelisted dapps",
        "type": "object",
        "required": [
          "add_module"
        ],
        "properties": {
          "add_module": {
            "type": "object",
            "required": [
              "module"
            ],
            "properties": {
              "module": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Removes the provided address from the whitelisted dapps",
        "type": "object",
        "required": [
          "remove_module"
        ],
        "properties": {
          "remove_module": {
            "type": "object",
            "required": [
              "module"
            ],
            "properties": {
              "module": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Updates the VAULT_ASSETS map",
        "type": "object",
        "required": [
          "update_assets"
        ],
        "properties": {
          "update_assets": {
            "type": "object",
            "required": [
              "to_add",
              "to_remove"
            ],
            "properties": {
              "to_add": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/UncheckedProxyAsset"
                }
              },
              "to_remove": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "BankMsg": {
        "description": "The message types of the bank module.\n\nSee https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/bank/v1beta1/tx.proto",
        "oneOf": [
          {
            "description": "Sends native tokens from the contract to the given address.\n\nThis is translated to a [MsgSend](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/bank/v1beta1/tx.proto#L19-L28). `from_address` is automatically filled with the current contract's address.",
            "type": "object",
            "required": [
              "send"
            ],
            "properties": {
              "send": {
                "type": "object",
                "required": [
                  "amount",
                  "to_address"
                ],
                "properties": {
                  "amount": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Coin"
                    }
                  },
                  "to_address": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "This will burn the given coins from the contract's account. There is no Cosmos SDK message that performs this, but it can be done by calling the bank keeper. Important if a contract controls significant token supply that must be retired.",
            "type": "object",
            "required": [
              "burn"
            ],
            "properties": {
              "burn": {
                "type": "object",
                "required": [
                  "amount"
                ],
                "properties": {
                  "amount": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Coin"
                    }
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "BankQuery": {
        "oneOf": [
          {
            "description": "This calls into the native bank module for one denomination Return value is BalanceResponse",
            "type": "object",
            "required": [
              "balance"
            ],
            "properties": {
              "balance": {
                "type": "object",
                "required": [
                  "address",
                  "denom"
                ],
                "properties": {
                  "address": {
                    "type": "string"
                  },
                  "denom": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "This calls into the native bank module for all denominations. Note that this may be much more expensive than Balance and should be avoided if possible. Return value is AllBalanceResponse.",
            "type": "object",
            "required": [
              "all_balances"
            ],
            "properties": {
              "all_balances": {
                "type": "object",
                "required": [
                  "address"
                ],
                "properties": {
                  "address": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Binary": {
        "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
        "type": "string"
      },
      "CallbackInfo": {
        "type": "object",
        "required": [
          "id",
          "receiver"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "receiver": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Coin": {
        "type": "object",
        "required": [
          "amount",
          "denom"
        ],
        "properties": {
          "amount": {
            "$ref": "#/definitions/Uint128"
          },
          "denom": {
            "type": "string"
          }
        }
      },
      "CosmosMsg_for_Empty": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "bank"
            ],
            "properties": {
              "bank": {
                "$ref": "#/definitions/BankMsg"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "custom"
            ],
            "properties": {
              "custom": {
                "$ref": "#/definitions/Empty"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "staking"
            ],
            "properties": {
              "staking": {
                "$ref": "#/definitions/StakingMsg"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "distribution"
            ],
            "properties": {
              "distribution": {
                "$ref": "#/definitions/DistributionMsg"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "A Stargate message encoded the same way as a protobuf [Any](https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/any.proto). This is the same structure as messages in `TxBody` from [ADR-020](https://github.com/cosmos/cosmos-sdk/blob/master/docs/architecture/adr-020-protobuf-transaction-encoding.md)",
            "type": "object",
            "required": [
              "stargate"
            ],
            "properties": {
              "stargate": {
                "type": "object",
                "required": [
                  "type_url",
                  "value"
                ],
                "properties": {
                  "type_url": {
                    "type": "string"
                  },
                  "value": {
                    "$ref": "#/definitions/Binary"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "ibc"
            ],
            "properties": {
              "ibc": {
                "$ref": "#/definitions/IbcMsg"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "wasm"
            ],
            "properties": {
              "wasm": {
                "$ref": "#/definitions/WasmMsg"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "gov"
            ],
            "properties": {
              "gov": {
                "$ref": "#/definitions/GovMsg"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Decimal": {
        "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
        "type": "string"
      },
      "DistributionMsg": {
        "description": "The message types of the distribution module.\n\nSee https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/proto/cosmos/distribution/v1beta1/tx.proto",
        "oneOf": [
          {
            "description": "This is translated to a [MsgSetWithdrawAddress](https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/proto/cosmos/distribution/v1beta1/tx.proto#L29-L37). `delegator_address` is automatically filled with the current contract's address.",
            "type": "object",
            "required": [
              "set_withdraw_address"
            ],
            "properties": {
              "set_withdraw_address": {
                "type": "object",
                "required": [
                  "address"
                ],
                "properties": {
                  "address": {
                    "description": "The `withdraw_address`",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "This is translated to a [[MsgWithdrawDelegatorReward](https://github.com/cosmos/cosmos-sdk/blob/v0.42.4/proto/cosmos/distribution/v1beta1/tx.proto#L42-L50). `delegator_address` is automatically filled with the current contract's address.",
            "type": "object",
            "required": [
              "withdraw_delegator_reward"
            ],
            "properties": {
              "withdraw_delegator_reward": {
                "type": "object",
                "required": [
                  "validator"
                ],
                "properties": {
                  "validator": {
                    "description": "The `validator_address`",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Empty": {
        "description": "An empty struct that serves as a placeholder in different places, such as contracts that don't set a custom message.\n\nIt is designed to be expressable in correct JSON and JSON Schema but contains no meaningful data. Previously we used enums without cases, but those cannot represented as valid JSON Schema (https://github.com/CosmWasm/cosmwasm/issues/451)",
        "type": "object"
      },
      "ExecuteMsg": {
        "oneOf": [
          {
            "description": "Update the Admin",
            "type": "object",
            "required": [
              "update_admin"
            ],
            "properties": {
              "update_admin": {
                "type": "object",
                "required": [
                  "admin"
                ],
                "properties": {
                  "admin": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Changes the config",
            "type": "object",
            "required": [
              "update_config"
            ],
            "properties": {
              "update_config": {
                "type": "object",
                "properties": {
                  "ans_host": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "version_control": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Only callable by OS proxy Will attempt to forward the specified funds to the corresponding address on the remote chain.",
            "type": "object",
            "required": [
              "send_funds"
            ],
            "properties": {
              "send_funds": {
                "type": "object",
                "required": [
                  "funds",
                  "host_chain"
                ],
                "properties": {
                  "funds": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Coin"
                    }
                  },
                  "host_chain": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Register an OS on a remote chain over IBC This action creates a proxy for them on the remote chain.",
            "type": "object",
            "required": [
              "register"
            ],
            "properties": {
              "register": {
                "type": "object",
                "required": [
                  "host_chain"
                ],
                "properties": {
                  "host_chain": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "send_packet"
            ],
            "properties": {
              "send_packet": {
                "type": "object",
                "required": [
                  "action",
                  "host_chain",
                  "retries"
                ],
                "properties": {
                  "action": {
                    "$ref": "#/definitions/HostAction"
                  },
                  "callback_info": {
                    "anyOf": [
                      {
                        "$ref": "#/definitions/CallbackInfo"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "host_chain": {
                    "type": "string"
                  },
                  "retries": {
                    "type": "integer",
                    "format": "uint8",
                    "minimum": 0.0
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "remove_host"
            ],
            "properties": {
              "remove_host": {
                "type": "object",
                "required": [
                  "host_chain"
                ],
                "properties": {
                  "host_chain": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "GovMsg": {
        "oneOf": [
          {
            "description": "This maps directly to [MsgVote](https://github.com/cosmos/cosmos-sdk/blob/v0.42.5/proto/cosmos/gov/v1beta1/tx.proto#L46-L56) in the Cosmos SDK with voter set to the contract address.",
            "type": "object",
            "required": [
              "vote"
            ],
            "properties": {
              "vote": {
                "type": "object",
                "required": [
                  "proposal_id",
                  "vote"
                ],
                "properties": {
                  "proposal_id": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "vote": {
                    "$ref": "#/definitions/VoteOption"
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "HostAction": {
        "description": "Callable actions on a remote host",
        "oneOf": [
          {
            "type": "object",
            "required": [
              "app"
            ],
            "properties": {
              "app": {
                "type": "object",
                "required": [
                  "msg"
                ],
                "properties": {
                  "msg": {
                    "$ref": "#/definitions/Binary"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "dispatch"
            ],
            "properties": {
              "dispatch": {
                "type": "object",
                "required": [
                  "msgs"
                ],
                "properties": {
                  "msgs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/CosmosMsg_for_Empty"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "query"
            ],
            "properties": {
              "query": {
                "type": "object",
                "required": [
                  "msgs"
                ],
                "properties": {
                  "msgs": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/QueryRequest_for_Empty"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "send_all_back"
            ],
            "properties": {
              "send_all_back": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "balances"
            ],
            "properties": {
              "balances": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Can't be called through the packet endpoint directly",
            "type": "object",
            "required": [
              "internal"
            ],
            "properties": {
              "internal": {
                "$ref": "#/definitions/InternalAction"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "IbcMsg": {
        "description": "These are messages in the IBC lifecycle. Only usable by IBC-enabled contracts (contracts that directly speak the IBC protocol via 6 entry points)",
        "oneOf": [
          {
            "description": "Sends bank tokens owned by the contract to the given address on another chain. The channel must already be established between the ibctransfer module on this chain and a matching module on the remote chain. We cannot select the port_id, this is whatever the local chain has bound the ibctransfer module to.",
            "type": "object",
            "required": [
              "transfer"
            ],
            "properties": {
              "transfer": {
                "type": "object",
                "required": [
                  "amount",
                  "channel_id",
                  "timeout",
                  "to_address"
                ],
                "properties": {
                  "amount": {
                    "description": "packet data only supports one coin https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/ibc/applications/transfer/v1/transfer.proto#L11-L20",
                    "allOf": [
                      {
                        "$ref": "#/definitions/Coin"
                      }
                    ]
                  },
                  "channel_id": {
                    "description": "exisiting channel to send the tokens over",
                    "type": "string"
                  },
                  "timeout": {
                    "description": "when packet times out, measured on remote chain",
                    "allOf": [
                      {
                        "$ref": "#/definitions/IbcTimeout"
                      }
                    ]
                  },
                  "to_address": {
                    "description": "address on the remote chain to receive these tokens",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Sends an IBC packet with given data over the existing channel. Data should be encoded in a format defined by the channel version, and the module on the other side should know how to parse this.",
            "type": "object",
            "required": [
              "send_packet"
            ],
            "properties": {
              "send_packet": {
                "type": "object",
                "required": [
                  "channel_id",
                  "data",
                  "timeout"
                ],
                "properties": {
                  "channel_id": {
                    "type": "string"
                  },
                  "data": {
                    "$ref": "#/definitions/Binary"
                  },
                  "timeout": {
                    "description": "when packet times out, measured on remote chain",
                    "allOf": [
                      {
                        "$ref": "#/definitions/IbcTimeout"
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "This will close an existing channel that is owned by this contract. Port is auto-assigned to the contract's IBC port",
            "type": "object",
            "required": [
              "close_channel"
            ],
            "properties": {
              "close_channel": {
                "type": "object",
                "required": [
                  "channel_id"
                ],
                "properties": {
                  "channel_id": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "IbcQuery": {
        "description": "These are queries to the various IBC modules to see the state of the contract's IBC connection. These will return errors if the contract is not \"ibc enabled\"",
        "oneOf": [
          {
            "description": "Gets the Port ID the current contract is bound to.\n\nReturns a `PortIdResponse`.",
            "type": "object",
            "required": [
              "port_id"
            ],
            "properties": {
              "port_id": {
                "type": "object"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Lists all channels that are bound to a given port. If `port_id` is omitted, this list all channels bound to the contract's port.\n\nReturns a `ListChannelsResponse`.",
            "type": "object",
            "required": [
              "list_channels"
            ],
            "properties": {
              "list_channels": {
                "type": "object",
                "properties": {
                  "port_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Lists all information for a (portID, channelID) pair. If port_id is omitted, it will default to the contract's own channel. (To save a PortId{} call)\n\nReturns a `ChannelResponse`.",
            "type": "object",
            "required": [
              "channel"
            ],
            "properties": {
              "channel": {
                "type": "object",
                "required": [
                  "channel_id"
                ],
                "properties": {
                  "channel_id": {
                    "type": "string"
                  },
                  "port_id": {
                    "type": [
                      "string",
                      "null"
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "IbcTimeout": {
        "description": "In IBC each package must set at least one type of timeout: the timestamp or the block height. Using this rather complex enum instead of two timeout fields we ensure that at least one timeout is set.",
        "type": "object",
        "properties": {
          "block": {
            "anyOf": [
              {
                "$ref": "#/definitions/IbcTimeoutBlock"
              },
              {
                "type": "null"
              }
            ]
          },
          "timestamp": {
            "anyOf": [
              {
                "$ref": "#/definitions/Timestamp"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "IbcTimeoutBlock": {
        "description": "IBCTimeoutHeight Height is a monotonically increasing data type that can be compared against another Height for the purposes of updating and freezing clients. Ordering is (revision_number, timeout_height)",
        "type": "object",
        "required": [
          "height",
          "revision"
        ],
        "properties": {
          "height": {
            "description": "block height after which the packet times out. the height within the given revision",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          },
          "revision": {
            "description": "the version that the client is currently on (eg. after reseting the chain this could increment 1 as height drops to 0)",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        }
      },
      "InternalAction": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "who_am_i"
            ]
          },
          {
            "type": "object",
            "required": [
              "register"
            ],
            "properties": {
              "register": {
                "type": "object",
                "required": [
                  "os_proxy_address"
                ],
                "properties": {
                  "os_proxy_address": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "QueryRequest_for_Empty": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "bank"
            ],
            "properties": {
              "bank": {
                "$ref": "#/definitions/BankQuery"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "custom"
            ],
            "properties": {
              "custom": {
                "$ref": "#/definitions/Empty"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "staking"
            ],
            "properties": {
              "staking": {
                "$ref": "#/definitions/StakingQuery"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "A Stargate query is encoded the same way as abci_query, with path and protobuf encoded request data. The format is defined in [ADR-21](https://github.com/cosmos/cosmos-sdk/blob/master/docs/architecture/adr-021-protobuf-query-encoding.md). The response is protobuf encoded data directly without a JSON response wrapper. The caller is responsible for compiling the proper protobuf definitions for both requests and responses.",
            "type": "object",
            "required": [
              "stargate"
            ],
            "properties": {
              "stargate": {
                "type": "object",
                "required": [
                  "data",
                  "path"
                ],
                "properties": {
                  "data": {
                    "description": "this is the expected protobuf message type (not any), binary encoded",
                    "allOf": [
                      {
                        "$ref": "#/definitions/Binary"
                      }
                    ]
                  },
                  "path": {
                    "description": "this is the fully qualified service path used for routing, eg. custom/cosmos_sdk.x.bank.v1.Query/QueryBalance",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "ibc"
            ],
            "properties": {
              "ibc": {
                "$ref": "#/definitions/IbcQuery"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "wasm"
            ],
            "properties": {
              "wasm": {
                "$ref": "#/definitions/WasmQuery"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "StakingMsg": {
        "description": "The message types of the staking module.\n\nSee https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto",
        "oneOf": [
          {
            "description": "This is translated to a [MsgDelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L81-L90). `delegator_address` is automatically filled with the current contract's address.",
            "type": "object",
            "required": [
              "delegate"
            ],
            "properties": {
              "delegate": {
                "type": "object",
                "required": [
                  "amount",
                  "validator"
                ],
                "properties": {
                  "amount": {
                    "$ref": "#/definitions/Coin"
                  },
                  "validator": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "This is translated to a [MsgUndelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L112-L121). `delegator_address` is automatically filled with the current contract's address.",
            "type": "object",
            "required": [
              "undelegate"
            ],
            "properties": {
              "undelegate": {
                "type": "object",
                "required": [
                  "amount",
                  "validator"
                ],
                "properties": {
                  "amount": {
                    "$ref": "#/definitions/Coin"
                  },
                  "validator": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "This is translated to a [MsgBeginRedelegate](https://github.com/cosmos/cosmos-sdk/blob/v0.40.0/proto/cosmos/staking/v1beta1/tx.proto#L95-L105). `delegator_address` is automatically filled with the current contract's address.",
            "type": "object",
            "required": [
              "redelegate"
            ],
            "properties": {
              "redelegate": {
                "type": "object",
                "required": [
                  "amount",
                  "dst_validator",
                  "src_validator"
                ],
                "properties": {
                  "amount": {
                    "$ref": "#/definitions/Coin"
                  },
                  "dst_validator": {
                    "type": "string"
                  },
                  "src_validator": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "StakingQuery": {
        "oneOf": [
          {
            "description": "Returns the denomination that can be bonded (if there are multiple native tokens on the chain)",
            "type": "object",
            "required": [
              "bonded_denom"
            ],
            "properties": {
              "bonded_denom": {
                "type": "object"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "AllDelegations will return all delegations by the delegator",
            "type": "object",
            "required": [
              "all_delegations"
            ],
            "properties": {
              "all_delegations": {
                "type": "object",
                "required": [
                  "delegator"
                ],
                "properties": {
                  "delegator": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Delegation will return more detailed info on a particular delegation, defined by delegator/validator pair",
            "type": "object",
            "required": [
              "delegation"
            ],
            "properties": {
              "delegation": {
                "type": "object",
                "required": [
                  "delegator",
                  "validator"
                ],
                "properties": {
                  "delegator": {
                    "type": "string"
                  },
                  "validator": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns all validators in the currently active validator set.\n\nThe query response type is `AllValidatorsResponse`.",
            "type": "object",
            "required": [
              "all_validators"
            ],
            "properties": {
              "all_validators": {
                "type": "object"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Returns the validator at the given address. Returns None if the validator is not part of the currently active validator set.\n\nThe query response type is `ValidatorResponse`.",
            "type": "object",
            "required": [
              "validator"
            ],
            "properties": {
              "validator": {
                "type": "object",
                "required": [
                  "address"
                ],
                "properties": {
                  "address": {
                    "description": "The validator's address (e.g. (e.g. cosmosvaloper1...))",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Timestamp": {
        "description": "A point in time in nanosecond precision.\n\nThis type can represent times from 1970-01-01T00:00:00Z to 2554-07-21T23:34:33Z.\n\n## Examples\n\n``` # use cosmwasm_std::Timestamp; let ts = Timestamp::from_nanos(1_000_000_202); assert_eq!(ts.nanos(), 1_000_000_202); assert_eq!(ts.seconds(), 1); assert_eq!(ts.subsec_nanos(), 202);\n\nlet ts = ts.plus_seconds(2); assert_eq!(ts.nanos(), 3_000_000_202); assert_eq!(ts.seconds(), 3); assert_eq!(ts.subsec_nanos(), 202); ```",
        "allOf": [
          {
            "$ref": "#/definitions/Uint64"
          }
        ]
      },
      "Uint128": {
        "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
        "type": "string"
      },
      "Uint64": {
        "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
        "type": "string"
      },
      "UncheckedProxyAsset": {
        "description": "A proxy asset with unchecked ans_host entry fields.",
        "type": "object",
        "required": [
          "asset"
        ],
        "properties": {
          "asset": {
            "description": "The asset that's held by the proxy",
            "type": "string"
          },
          "value_reference": {
            "description": "The value reference provides the tooling to get the value of the asset relative to the base asset. If None, the provided asset is set as the base asset. **You can only have one base asset!**",
            "anyOf": [
              {
                "$ref": "#/definitions/UncheckedValueRef"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "UncheckedValueRef": {
        "description": "Provides information on how to calculate the value of an asset",
        "oneOf": [
          {
            "description": "A pool address of an asset/asset pair Both assets must be defined in the Proxy_assets state",
            "type": "object",
            "required": [
              "Pool"
            ],
            "properties": {
              "Pool": {
                "type": "object",
                "required": [
                  "exchange",
                  "pair"
                ],
                "properties": {
                  "exchange": {
                    "type": "string"
                  },
                  "pair": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "LiquidityToken"
            ],
            "properties": {
              "LiquidityToken": {
                "type": "object"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "ValueAs"
            ],
            "properties": {
              "ValueAs": {
                "type": "object",
                "required": [
                  "asset",
                  "multiplier"
                ],
                "properties": {
                  "asset": {
                    "type": "string"
                  },
                  "multiplier": {
                    "$ref": "#/definitions/Decimal"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "External"
            ],
            "properties": {
              "External": {
                "type": "object",
                "required": [
                  "api_name"
                ],
                "properties": {
                  "api_name": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "VoteOption": {
        "type": "string",
        "enum": [
          "yes",
          "no",
          "abstain",
          "no_with_veto"
        ]
      },
      "WasmMsg": {
        "description": "The message types of the wasm module.\n\nSee https://github.com/CosmWasm/wasmd/blob/v0.14.0/x/wasm/internal/types/tx.proto",
        "oneOf": [
          {
            "description": "Dispatches a call to another contract at a known address (with known ABI).\n\nThis is translated to a [MsgExecuteContract](https://github.com/CosmWasm/wasmd/blob/v0.14.0/x/wasm/internal/types/tx.proto#L68-L78). `sender` is automatically filled with the current contract's address.",
            "type": "object",
            "required": [
              "execute"
            ],
            "properties": {
              "execute": {
                "type": "object",
                "required": [
                  "contract_addr",
                  "funds",
                  "msg"
                ],
                "properties": {
                  "contract_addr": {
                    "type": "string"
                  },
                  "funds": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Coin"
                    }
                  },
                  "msg": {
                    "description": "msg is the json-encoded ExecuteMsg struct (as raw Binary)",
                    "allOf": [
                      {
                        "$ref": "#/definitions/Binary"
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Instantiates a new contracts from previously uploaded Wasm code.\n\nThis is translated to a [MsgInstantiateContract](https://github.com/CosmWasm/wasmd/blob/v0.16.0-alpha1/x/wasm/internal/types/tx.proto#L47-L61). `sender` is automatically filled with the current contract's address.",
            "type": "object",
            "required": [
              "instantiate"
            ],
            "properties": {
              "instantiate": {
                "type": "object",
                "required": [
                  "code_id",
                  "funds",
                  "label",
                  "msg"
                ],
                "properties": {
                  "admin": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "code_id": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  },
                  "funds": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/Coin"
                    }
                  },
                  "label": {
                    "description": "A human-readbale label for the contract",
                    "type": "string"
                  },
                  "msg": {
                    "description": "msg is the JSON-encoded InstantiateMsg struct (as raw Binary)",
                    "allOf": [
                      {
                        "$ref": "#/definitions/Binary"
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Migrates a given contracts to use new wasm code. Passes a MigrateMsg to allow us to customize behavior.\n\nOnly the contract admin (as defined in wasmd), if any, is able to make this call.\n\nThis is translated to a [MsgMigrateContract](https://github.com/CosmWasm/wasmd/blob/v0.14.0/x/wasm/internal/types/tx.proto#L86-L96). `sender` is automatically filled with the current contract's address.",
            "type": "object",
            "required": [
              "migrate"
            ],
            "properties": {
              "migrate": {
                "type": "object",
                "required": [
                  "contract_addr",
                  "msg",
                  "new_code_id"
                ],
                "properties": {
                  "contract_addr": {
                    "type": "string"
                  },
                  "msg": {
                    "description": "msg is the json-encoded MigrateMsg struct that will be passed to the new code",
                    "allOf": [
                      {
                        "$ref": "#/definitions/Binary"
                      }
                    ]
                  },
                  "new_code_id": {
                    "description": "the code_id of the new logic to place in the given contract",
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Sets a new admin (for migrate) on the given contract. Fails if this contract is not currently admin of the target contract.",
            "type": "object",
            "required": [
              "update_admin"
            ],
            "properties": {
              "update_admin": {
                "type": "object",
                "required": [
                  "admin",
                  "contract_addr"
                ],
                "properties": {
                  "admin": {
                    "type": "string"
                  },
                  "contract_addr": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Clears the admin on the given contract, so no more migration possible. Fails if this contract is not currently admin of the target contract.",
            "type": "object",
            "required": [
              "clear_admin"
            ],
            "properties": {
              "clear_admin": {
                "type": "object",
                "required": [
                  "contract_addr"
                ],
                "properties": {
                  "contract_addr": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "WasmQuery": {
        "oneOf": [
          {
            "description": "this queries the public API of another contract at a known address (with known ABI) Return value is whatever the contract returns (caller should know), wrapped in a ContractResult that is JSON encoded.",
            "type": "object",
            "required": [
              "smart"
            ],
            "properties": {
              "smart": {
                "type": "object",
                "required": [
                  "contract_addr",
                  "msg"
                ],
                "properties": {
                  "contract_addr": {
                    "type": "string"
                  },
                  "msg": {
                    "description": "msg is the json-encoded QueryMsg struct",
                    "allOf": [
                      {
                        "$ref": "#/definitions/Binary"
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "this queries the raw kv-store of the contract. returns the raw, unparsed data stored at that key, which may be an empty vector if not present",
            "type": "object",
            "required": [
              "raw"
            ],
            "properties": {
              "raw": {
                "type": "object",
                "required": [
                  "contract_addr",
                  "key"
                ],
                "properties": {
                  "contract_addr": {
                    "type": "string"
                  },
                  "key": {
                    "description": "Key is the raw key used in the contracts Storage",
                    "allOf": [
                      {
                        "$ref": "#/definitions/Binary"
                      }
                    ]
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "returns a ContractInfoResponse with metadata on the contract from the runtime",
            "type": "object",
            "required": [
              "contract_info"
            ],
            "properties": {
              "contract_info": {
                "type": "object",
                "required": [
                  "contract_addr"
                ],
                "properties": {
                  "contract_addr": {
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "description": "Returns [`ConfigResponse`]",
        "type": "object",
        "required": [
          "config"
        ],
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Returns the total value of all held assets [`TotalValueResponse`]",
        "type": "object",
        "required": [
          "total_value"
        ],
        "properties": {
          "total_value": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Returns the value of amount OR one token of a specific asset [`TokenValueResponse`]",
        "type": "object",
        "required": [
          "token_value"
        ],
        "properties": {
          "token_value": {
            "type": "object",
            "required": [
              "identifier"
            ],
            "properties": {
              "amount": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Uint128"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "identifier": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Returns the value of one specific asset [`HoldingValueResponse`]",
        "type": "object",
        "required": [
          "holding_value"
        ],
        "properties": {
          "holding_value": {
            "type": "object",
            "required": [
              "identifier"
            ],
            "properties": {
              "identifier": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Returns the amount of specified tokens this contract holds [`HoldingAmountResponse`]",
        "type": "object",
        "required": [
          "holding_amount"
        ],
        "properties": {
          "holding_amount": {
            "type": "object",
            "required": [
              "identifier"
            ],
            "properties": {
              "identifier": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Returns the VAULT_ASSETS value for the specified key [`AssetConfigResponse`]",
        "type": "object",
        "required": [
          "asset_config"
        ],
        "properties": {
          "asset_config": {
            "type": "object",
            "required": [
              "identifier"
            ],
            "properties": {
              "identifier": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Returns [`AssetsResponse`]",
        "type": "object",
        "required": [
          "assets"
        ],
        "properties": {
          "assets": {
            "type": "object",
            "properties": {
              "page_size": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint8",
                "minimum": 0.0
              },
              "page_token": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Returns [`ValidityResponse`]",
        "type": "object",
        "required": [
          "check_validity"
        ],
        "properties": {
          "check_validity": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Returns [`BaseAssetResponse`]",
        "type": "object",
        "required": [
          "base_asset"
        ],
        "properties": {
          "base_asset": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Uint128": {
        "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
        "type": "string"
      }
    }
  },
  "migrate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "MigrateMsg",
    "type": "object",
    "additionalProperties": false
  },
  "sudo": null,
  "responses": {
    "asset_config": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AssetConfigResponse",
      "type": "object",
      "required": [
        "proxy_asset"
      ],
      "properties": {
        "proxy_asset": {
          "$ref": "#/definitions/ProxyAsset"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "AssetEntry": {
          "description": "May key to retrieve information on an asset",
          "type": "string"
        },
        "ContractEntry": {
          "description": "Key to get the Address of a contract Use [`UncheckedContractEntry`] to construct this type.",
          "type": "object",
          "required": [
            "contract",
            "protocol"
          ],
          "properties": {
            "contract": {
              "type": "string"
            },
            "protocol": {
              "type": "string"
            }
          }
        },
        "Decimal": {
          "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
          "type": "string"
        },
        "ProxyAsset": {
          "description": "Every ProxyAsset provides a way to determine its value recursively relative to a base asset.",
          "type": "object",
          "required": [
            "asset"
          ],
          "properties": {
            "asset": {
              "description": "Asset entry that maps to an AssetInfo using raw-queries on ans_host",
              "allOf": [
                {
                  "$ref": "#/definitions/AssetEntry"
                }
              ]
            },
            "value_reference": {
              "description": "The value reference provides the tooling to get the value of the asset relative to the base asset.",
              "anyOf": [
                {
                  "$ref": "#/definitions/ValueRef"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        },
        "ValueRef": {
          "description": "Provides information on how to calculate the value of an asset",
          "oneOf": [
            {
              "description": "A pool name of an asset/asset pair Both assets must be defined in the Vault_assets state",
              "type": "object",
              "required": [
                "Pool"
              ],
              "properties": {
                "Pool": {
                  "type": "object",
                  "required": [
                    "pair"
                  ],
                  "properties": {
                    "pair": {
                      "$ref": "#/definitions/ContractEntry"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Liquidity pool token",
              "type": "object",
              "required": [
                "LiquidityToken"
              ],
              "properties": {
                "LiquidityToken": {
                  "type": "object"
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Asset will be valued as if they are ValueAs.asset tokens",
              "type": "object",
              "required": [
                "ValueAs"
              ],
              "properties": {
                "ValueAs": {
                  "type": "object",
                  "required": [
                    "asset",
                    "multiplier"
                  ],
                  "properties": {
                    "asset": {
                      "$ref": "#/definitions/AssetEntry"
                    },
                    "multiplier": {
                      "$ref": "#/definitions/Decimal"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Query an external contract to get the value",
              "type": "object",
              "required": [
                "External"
              ],
              "properties": {
                "External": {
                  "type": "object",
                  "required": [
                    "api_name"
                  ],
                  "properties": {
                    "api_name": {
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        }
      }
    },
    "assets": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "AssetsResponse",
      "type": "object",
      "required": [
        "assets"
      ],
      "properties": {
        "assets": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              {
                "$ref": "#/definitions/AssetEntry"
              },
              {
                "$ref": "#/definitions/ProxyAsset"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "AssetEntry": {
          "description": "May key to retrieve information on an asset",
          "type": "string"
        },
        "ContractEntry": {
          "description": "Key to get the Address of a contract Use [`UncheckedContractEntry`] to construct this type.",
          "type": "object",
          "required": [
            "contract",
            "protocol"
          ],
          "properties": {
            "contract": {
              "type": "string"
            },
            "protocol": {
              "type": "string"
            }
          }
        },
        "Decimal": {
          "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
          "type": "string"
        },
        "ProxyAsset": {
          "description": "Every ProxyAsset provides a way to determine its value recursively relative to a base asset.",
          "type": "object",
          "required": [
            "asset"
          ],
          "properties": {
            "asset": {
              "description": "Asset entry that maps to an AssetInfo using raw-queries on ans_host",
              "allOf": [
                {
                  "$ref": "#/definitions/AssetEntry"
                }
              ]
            },
            "value_reference": {
              "description": "The value reference provides the tooling to get the value of the asset relative to the base asset.",
              "anyOf": [
                {
                  "$ref": "#/definitions/ValueRef"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        },
        "ValueRef": {
          "description": "Provides information on how to calculate the value of an asset",
          "oneOf": [
            {
              "description": "A pool name of an asset/asset pair Both assets must be defined in the Vault_assets state",
              "type": "object",
              "required": [
                "Pool"
              ],
              "properties": {
                "Pool": {
                  "type": "object",
                  "required": [
                    "pair"
                  ],
                  "properties": {
                    "pair": {
                      "$ref": "#/definitions/ContractEntry"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Liquidity pool token",
              "type": "object",
              "required": [
                "LiquidityToken"
              ],
              "properties": {
                "LiquidityToken": {
                  "type": "object"
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Asset will be valued as if they are ValueAs.asset tokens",
              "type": "object",
              "required": [
                "ValueAs"
              ],
              "properties": {
                "ValueAs": {
                  "type": "object",
                  "required": [
                    "asset",
                    "multiplier"
                  ],
                  "properties": {
                    "asset": {
                      "$ref": "#/definitions/AssetEntry"
                    },
                    "multiplier": {
                      "$ref": "#/definitions/Decimal"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Query an external contract to get the value",
              "type": "object",
              "required": [
                "External"
              ],
              "properties": {
                "External": {
                  "type": "object",
                  "required": [
                    "api_name"
                  ],
                  "properties": {
                    "api_name": {
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        }
      }
    },
    "base_asset": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "BaseAssetResponse",
      "type": "object",
      "required": [
        "base_asset"
      ],
      "properties": {
        "base_asset": {
          "$ref": "#/definitions/ProxyAsset"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "AssetEntry": {
          "description": "May key to retrieve information on an asset",
          "type": "string"
        },
        "ContractEntry": {
          "description": "Key to get the Address of a contract Use [`UncheckedContractEntry`] to construct this type.",
          "type": "object",
          "required": [
            "contract",
            "protocol"
          ],
          "properties": {
            "contract": {
              "type": "string"
            },
            "protocol": {
              "type": "string"
            }
          }
        },
        "Decimal": {
          "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
          "type": "string"
        },
        "ProxyAsset": {
          "description": "Every ProxyAsset provides a way to determine its value recursively relative to a base asset.",
          "type": "object",
          "required": [
            "asset"
          ],
          "properties": {
            "asset": {
              "description": "Asset entry that maps to an AssetInfo using raw-queries on ans_host",
              "allOf": [
                {
                  "$ref": "#/definitions/AssetEntry"
                }
              ]
            },
            "value_reference": {
              "description": "The value reference provides the tooling to get the value of the asset relative to the base asset.",
              "anyOf": [
                {
                  "$ref": "#/definitions/ValueRef"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        },
        "ValueRef": {
          "description": "Provides information on how to calculate the value of an asset",
          "oneOf": [
            {
              "description": "A pool name of an asset/asset pair Both assets must be defined in the Vault_assets state",
              "type": "object",
              "required": [
                "Pool"
              ],
              "properties": {
                "Pool": {
                  "type": "object",
                  "required": [
                    "pair"
                  ],
                  "properties": {
                    "pair": {
                      "$ref": "#/definitions/ContractEntry"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Liquidity pool token",
              "type": "object",
              "required": [
                "LiquidityToken"
              ],
              "properties": {
                "LiquidityToken": {
                  "type": "object"
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Asset will be valued as if they are ValueAs.asset tokens",
              "type": "object",
              "required": [
                "ValueAs"
              ],
              "properties": {
                "ValueAs": {
                  "type": "object",
                  "required": [
                    "asset",
                    "multiplier"
                  ],
                  "properties": {
                    "asset": {
                      "$ref": "#/definitions/AssetEntry"
                    },
                    "multiplier": {
                      "$ref": "#/definitions/Decimal"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "description": "Query an external contract to get the value",
              "type": "object",
              "required": [
                "External"
              ],
              "properties": {
                "External": {
                  "type": "object",
                  "required": [
                    "api_name"
                  ],
                  "properties": {
                    "api_name": {
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        }
      }
    },
    "check_validity": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ValidityResponse",
      "type": "object",
      "properties": {
        "missing_dependencies": {
          "description": "Assets that are missing in the VAULT_ASSET map which caused some assets to be unresolvable.",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/AssetEntry"
          }
        },
        "unresolvable_assets": {
          "description": "Assets that have unresolvable dependencies in their value calculation",
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/AssetEntry"
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "AssetEntry": {
          "description": "May key to retrieve information on an asset",
          "type": "string"
        }
      }
    },
    "config": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ConfigResponse",
      "type": "object",
      "required": [
        "modules"
      ],
      "properties": {
        "modules": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "holding_amount": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "HoldingAmountResponse",
      "type": "object",
      "required": [
        "amount"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "holding_value": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "HoldingValueResponse",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "$ref": "#/definitions/Uint128"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "token_value": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "TokenValueResponse",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "$ref": "#/definitions/Uint128"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    },
    "total_value": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "TotalValueResponse",
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "$ref": "#/definitions/Uint128"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint128": {
          "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
          "type": "string"
        }
      }
    }
  }
}
