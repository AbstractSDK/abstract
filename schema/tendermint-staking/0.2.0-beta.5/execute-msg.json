{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "description": "EndpointMsg to the Middleware.",
  "oneOf": [
    {
      "description": "A configuration message.",
      "type": "object",
      "required": [
        "base"
      ],
      "properties": {
        "base": {
          "$ref": "#/definitions/BaseExecuteMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "An app request.",
      "type": "object",
      "required": [
        "app"
      ],
      "properties": {
        "app": {
          "$ref": "#/definitions/ExtensionRequestMsg_for_RequestMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "IbcReceive to process callbacks",
      "type": "object",
      "required": [
        "ibc_callback"
      ],
      "properties": {
        "ibc_callback": {
          "$ref": "#/definitions/IbcResponseMsg"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Receive endpoint for CW20 / external service integrations",
      "type": "object",
      "required": [
        "receive"
      ],
      "properties": {
        "receive": {
          "$ref": "#/definitions/Empty"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "BaseExecuteMsg": {
      "description": "Configuration message for the extension",
      "oneOf": [
        {
          "description": "Add or remove traders If a trader is both in to_add and to_remove, it will be removed.",
          "type": "object",
          "required": [
            "update_traders"
          ],
          "properties": {
            "update_traders": {
              "type": "object",
              "properties": {
                "to_add": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "to_remove": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Remove the extension",
          "type": "object",
          "required": [
            "remove"
          ],
          "properties": {
            "remove": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
      "type": "string"
    },
    "Empty": {
      "description": "An empty struct that serves as a placeholder in different places, such as contracts that don't set a custom message.\n\nIt is designed to be expressable in correct JSON and JSON Schema but contains no meaningful data. Previously we used enums without cases, but those cannot represented as valid JSON Schema (https://github.com/CosmWasm/cosmwasm/issues/451)",
      "type": "object"
    },
    "ExtensionRequestMsg_for_RequestMsg": {
      "description": "An extension request. If proxy is None, then the sender must be an OS manager and the proxy address is extrapolated from the OS id.",
      "type": "object",
      "required": [
        "request"
      ],
      "properties": {
        "proxy_address": {
          "type": [
            "string",
            "null"
          ]
        },
        "request": {
          "description": "The actual request",
          "allOf": [
            {
              "$ref": "#/definitions/RequestMsg"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "IbcResponseMsg": {
      "description": "IbcResponseMsg should be de/serialized under `Receive()` variant in a ExecuteMsg",
      "type": "object",
      "required": [
        "id",
        "msg"
      ],
      "properties": {
        "id": {
          "description": "The ID chosen by the caller in the `callback_id`",
          "type": "string"
        },
        "msg": {
          "$ref": "#/definitions/StdAck"
        }
      },
      "additionalProperties": false
    },
    "RequestMsg": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "delegate"
          ],
          "properties": {
            "delegate": {
              "type": "object",
              "required": [
                "amount",
                "validator"
              ],
              "properties": {
                "amount": {
                  "$ref": "#/definitions/Uint128"
                },
                "validator": {
                  "description": "Validator address",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "undelegate_from"
          ],
          "properties": {
            "undelegate_from": {
              "type": "object",
              "required": [
                "validator"
              ],
              "properties": {
                "amount": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/Uint128"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "validator": {
                  "description": "Validator address",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "undelegate_all"
          ],
          "properties": {
            "undelegate_all": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "redelegate"
          ],
          "properties": {
            "redelegate": {
              "type": "object",
              "required": [
                "destination_validator",
                "source_validator"
              ],
              "properties": {
                "amount": {
                  "anyOf": [
                    {
                      "$ref": "#/definitions/Uint128"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "destination_validator": {
                  "description": "Validator address",
                  "type": "string"
                },
                "source_validator": {
                  "description": "Validator address",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "set_withdraw_address"
          ],
          "properties": {
            "set_withdraw_address": {
              "type": "object",
              "required": [
                "new_withdraw_address"
              ],
              "properties": {
                "new_withdraw_address": {
                  "description": "The new `withdraw_address`",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "withdraw_delegator_reward"
          ],
          "properties": {
            "withdraw_delegator_reward": {
              "type": "object",
              "required": [
                "validator"
              ],
              "properties": {
                "validator": {
                  "description": "Validator address",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Withdraw all the rewards",
          "type": "object",
          "required": [
            "withdraw_all_rewards"
          ],
          "properties": {
            "withdraw_all_rewards": {
              "type": "object",
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "StdAck": {
      "description": "This is a generic ICS acknowledgement format. Proto defined here: https://github.com/cosmos/cosmos-sdk/blob/v0.42.0/proto/ibc/core/channel/v1/channel.proto#L141-L147 If ibc_receive_packet returns Err(), then x/wasm runtime will rollback the state and return an error message in this format",
      "oneOf": [
        {
          "type": "object",
          "required": [
            "result"
          ],
          "properties": {
            "result": {
              "$ref": "#/definitions/Binary"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "error"
          ],
          "properties": {
            "error": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
