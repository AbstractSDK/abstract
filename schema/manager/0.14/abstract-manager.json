{
  "contract_name": "abstract-manager",
  "contract_version": "0.14.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "account_id",
      "module_factory_address",
      "name",
      "owner",
      "version_control_address"
    ],
    "properties": {
      "account_id": {
        "type": "integer",
        "format": "uint32",
        "minimum": 0.0
      },
      "description": {
        "type": [
          "string",
          "null"
        ]
      },
      "link": {
        "type": [
          "string",
          "null"
        ]
      },
      "module_factory_address": {
        "type": "string"
      },
      "name": {
        "type": "string"
      },
      "owner": {
        "$ref": "#/definitions/GovernanceDetails_for_String"
      },
      "version_control_address": {
        "type": "string"
      }
    },
    "additionalProperties": false,
    "definitions": {
      "GovernanceDetails_for_String": {
        "description": "Governance types",
        "oneOf": [
          {
            "description": "A single address is admin",
            "type": "object",
            "required": [
              "Monarchy"
            ],
            "properties": {
              "Monarchy": {
                "type": "object",
                "required": [
                  "monarch"
                ],
                "properties": {
                  "monarch": {
                    "description": "The monarch's address",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "An external governance source",
            "type": "object",
            "required": [
              "External"
            ],
            "properties": {
              "External": {
                "type": "object",
                "required": [
                  "governance_address",
                  "governance_type"
                ],
                "properties": {
                  "governance_address": {
                    "description": "The external contract address",
                    "type": "string"
                  },
                  "governance_type": {
                    "description": "Governance type used for doing extra off-chain queries depending on the type.",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      }
    }
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "description": "Execute messages",
    "oneOf": [
      {
        "description": "Forward execution message to module",
        "type": "object",
        "required": [
          "exec_on_module"
        ],
        "properties": {
          "exec_on_module": {
            "type": "object",
            "required": [
              "exec_msg",
              "module_id"
            ],
            "properties": {
              "exec_msg": {
                "$ref": "#/definitions/Binary"
              },
              "module_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Updates the `ACCOUNT_MODULES` map Only callable by account factory or owner.",
        "type": "object",
        "required": [
          "update_module_addresses"
        ],
        "properties": {
          "update_module_addresses": {
            "type": "object",
            "properties": {
              "to_add": {
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": "array",
                  "items": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              },
              "to_remove": {
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Install module using module factory, callable by Owner",
        "type": "object",
        "required": [
          "install_module"
        ],
        "properties": {
          "install_module": {
            "type": "object",
            "required": [
              "module"
            ],
            "properties": {
              "init_msg": {
                "anyOf": [
                  {
                    "$ref": "#/definitions/Binary"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "module": {
                "$ref": "#/definitions/ModuleInfo"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Registers a module after creation. Used as a callback *only* by the Module Factory to register the module on the Account.",
        "type": "object",
        "required": [
          "register_module"
        ],
        "properties": {
          "register_module": {
            "type": "object",
            "required": [
              "module",
              "module_addr"
            ],
            "properties": {
              "module": {
                "$ref": "#/definitions/Module"
              },
              "module_addr": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Uninstall a module given its ID.",
        "type": "object",
        "required": [
          "uninstall_module"
        ],
        "properties": {
          "uninstall_module": {
            "type": "object",
            "required": [
              "module_id"
            ],
            "properties": {
              "module_id": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Upgrade the module to a new version If module is `abstract::manager` then the contract will do a self-migration.",
        "type": "object",
        "required": [
          "upgrade"
        ],
        "properties": {
          "upgrade": {
            "type": "object",
            "required": [
              "modules"
            ],
            "properties": {
              "modules": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": [
                    {
                      "$ref": "#/definitions/ModuleInfo"
                    },
                    {
                      "anyOf": [
                        {
                          "$ref": "#/definitions/Binary"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  ],
                  "maxItems": 2,
                  "minItems": 2
                }
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Update info",
        "type": "object",
        "required": [
          "update_info"
        ],
        "properties": {
          "update_info": {
            "type": "object",
            "properties": {
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "link": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "name": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Sets a new Owner",
        "type": "object",
        "required": [
          "set_owner"
        ],
        "properties": {
          "set_owner": {
            "type": "object",
            "required": [
              "owner"
            ],
            "properties": {
              "owner": {
                "$ref": "#/definitions/GovernanceDetails_for_String"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Update account statuses",
        "type": "object",
        "required": [
          "update_status"
        ],
        "properties": {
          "update_status": {
            "type": "object",
            "properties": {
              "is_suspended": {
                "type": [
                  "boolean",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Update settings for the Account, including IBC enabled, etc.",
        "type": "object",
        "required": [
          "update_settings"
        ],
        "properties": {
          "update_settings": {
            "type": "object",
            "properties": {
              "ibc_enabled": {
                "type": [
                  "boolean",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Callback endpoint",
        "type": "object",
        "required": [
          "callback"
        ],
        "properties": {
          "callback": {
            "$ref": "#/definitions/CallbackMsg"
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Addr": {
        "description": "A human readable address.\n\nIn Cosmos, this is typically bech32 encoded. But for multi-chain smart contracts no assumptions should be made other than being UTF-8 encoded and of reasonable length.\n\nThis type represents a validated address. It can be created in the following ways 1. Use `Addr::unchecked(input)` 2. Use `let checked: Addr = deps.api.addr_validate(input)?` 3. Use `let checked: Addr = deps.api.addr_humanize(canonical_addr)?` 4. Deserialize from JSON. This must only be done from JSON that was validated before such as a contract's state. `Addr` must not be used in messages sent by the user because this would result in unvalidated instances.\n\nThis type is immutable. If you really need to mutate it (Really? Are you sure?), create a mutable copy using `let mut mutable = Addr::to_string()` and operate on that `String` instance.",
        "type": "string"
      },
      "Binary": {
        "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
        "type": "string"
      },
      "CallbackMsg": {
        "type": "object",
        "additionalProperties": false
      },
      "GovernanceDetails_for_String": {
        "description": "Governance types",
        "oneOf": [
          {
            "description": "A single address is admin",
            "type": "object",
            "required": [
              "Monarchy"
            ],
            "properties": {
              "Monarchy": {
                "type": "object",
                "required": [
                  "monarch"
                ],
                "properties": {
                  "monarch": {
                    "description": "The monarch's address",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "An external governance source",
            "type": "object",
            "required": [
              "External"
            ],
            "properties": {
              "External": {
                "type": "object",
                "required": [
                  "governance_address",
                  "governance_type"
                ],
                "properties": {
                  "governance_address": {
                    "description": "The external contract address",
                    "type": "string"
                  },
                  "governance_type": {
                    "description": "Governance type used for doing extra off-chain queries depending on the type.",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Module": {
        "type": "object",
        "required": [
          "info",
          "reference"
        ],
        "properties": {
          "info": {
            "$ref": "#/definitions/ModuleInfo"
          },
          "reference": {
            "$ref": "#/definitions/ModuleReference"
          }
        },
        "additionalProperties": false
      },
      "ModuleInfo": {
        "description": "Stores the namespace, name, and version of an Abstract module.",
        "type": "object",
        "required": [
          "name",
          "namespace",
          "version"
        ],
        "properties": {
          "name": {
            "description": "Name of the contract",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace of the module",
            "type": "string"
          },
          "version": {
            "description": "Version of the module",
            "allOf": [
              {
                "$ref": "#/definitions/ModuleVersion"
              }
            ]
          }
        },
        "additionalProperties": false
      },
      "ModuleReference": {
        "oneOf": [
          {
            "description": "Core Abstract Contracts",
            "type": "object",
            "required": [
              "account_base"
            ],
            "properties": {
              "account_base": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Native Abstract Contracts",
            "type": "object",
            "required": [
              "native"
            ],
            "properties": {
              "native": {
                "$ref": "#/definitions/Addr"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Installable apis",
            "type": "object",
            "required": [
              "api"
            ],
            "properties": {
              "api": {
                "$ref": "#/definitions/Addr"
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Installable apps",
            "type": "object",
            "required": [
              "app"
            ],
            "properties": {
              "app": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          },
          {
            "description": "A stand-alone contract",
            "type": "object",
            "required": [
              "standalone"
            ],
            "properties": {
              "standalone": {
                "type": "integer",
                "format": "uint64",
                "minimum": 0.0
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "ModuleVersion": {
        "oneOf": [
          {
            "type": "string",
            "enum": [
              "latest"
            ]
          },
          {
            "type": "object",
            "required": [
              "version"
            ],
            "properties": {
              "version": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        ]
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "description": "Returns [`ModuleVersionsResponse`]",
        "type": "object",
        "required": [
          "module_versions"
        ],
        "properties": {
          "module_versions": {
            "type": "object",
            "required": [
              "ids"
            ],
            "properties": {
              "ids": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Returns [`ModuleAddressesResponse`]",
        "type": "object",
        "required": [
          "module_addresses"
        ],
        "properties": {
          "module_addresses": {
            "type": "object",
            "required": [
              "ids"
            ],
            "properties": {
              "ids": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Returns [`ModuleInfosResponse`]",
        "type": "object",
        "required": [
          "module_infos"
        ],
        "properties": {
          "module_infos": {
            "type": "object",
            "properties": {
              "limit": {
                "type": [
                  "integer",
                  "null"
                ],
                "format": "uint8",
                "minimum": 0.0
              },
              "start_after": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Returns [`ConfigResponse`]",
        "type": "object",
        "required": [
          "config"
        ],
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Returns [`InfoResponse`]",
        "type": "object",
        "required": [
          "info"
        ],
        "properties": {
          "info": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "migrate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "MigrateMsg",
    "type": "object",
    "additionalProperties": false
  },
  "sudo": null,
  "responses": {
    "config": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ConfigResponse",
      "type": "object",
      "required": [
        "account_id",
        "is_suspended",
        "module_factory_address",
        "owner",
        "version_control_address"
      ],
      "properties": {
        "account_id": {
          "$ref": "#/definitions/Uint64"
        },
        "is_suspended": {
          "type": "boolean"
        },
        "module_factory_address": {
          "type": "string"
        },
        "owner": {
          "type": "string"
        },
        "version_control_address": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "Uint64": {
          "description": "A thin wrapper around u64 that is using strings for JSON encoding/decoding, such that the full u64 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u64` to get the value out:\n\n``` # use cosmwasm_std::Uint64; let a = Uint64::from(42u64); assert_eq!(a.u64(), 42);\n\nlet b = Uint64::from(70u32); assert_eq!(b.u64(), 70); ```",
          "type": "string"
        }
      }
    },
    "info": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "InfoResponse",
      "type": "object",
      "required": [
        "info"
      ],
      "properties": {
        "info": {
          "$ref": "#/definitions/AccountInfo_for_String"
        }
      },
      "additionalProperties": false,
      "definitions": {
        "AccountInfo_for_String": {
          "type": "object",
          "required": [
            "chain_id",
            "governance_details",
            "name"
          ],
          "properties": {
            "chain_id": {
              "type": "string"
            },
            "description": {
              "type": [
                "string",
                "null"
              ]
            },
            "governance_details": {
              "$ref": "#/definitions/GovernanceDetails_for_String"
            },
            "link": {
              "type": [
                "string",
                "null"
              ]
            },
            "name": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "GovernanceDetails_for_String": {
          "description": "Governance types",
          "oneOf": [
            {
              "description": "A single address is admin",
              "type": "object",
              "required": [
                "Monarchy"
              ],
              "properties": {
                "Monarchy": {
                  "type": "object",
                  "required": [
                    "monarch"
                  ],
                  "properties": {
                    "monarch": {
                      "description": "The monarch's address",
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            {
              "description": "An external governance source",
              "type": "object",
              "required": [
                "External"
              ],
              "properties": {
                "External": {
                  "type": "object",
                  "required": [
                    "governance_address",
                    "governance_type"
                  ],
                  "properties": {
                    "governance_address": {
                      "description": "The external contract address",
                      "type": "string"
                    },
                    "governance_type": {
                      "description": "Governance type used for doing extra off-chain queries depending on the type.",
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            }
          ]
        }
      }
    },
    "module_addresses": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ModuleAddressesResponse",
      "type": "object",
      "required": [
        "modules"
      ],
      "properties": {
        "modules": {
          "type": "array",
          "items": {
            "type": "array",
            "items": [
              {
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "maxItems": 2,
            "minItems": 2
          }
        }
      },
      "additionalProperties": false
    },
    "module_infos": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ModuleInfosResponse",
      "type": "object",
      "required": [
        "module_infos"
      ],
      "properties": {
        "module_infos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagerModuleInfo"
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "ContractVersion": {
          "type": "object",
          "required": [
            "contract",
            "version"
          ],
          "properties": {
            "contract": {
              "description": "contract is the crate name of the implementing contract, eg. `crate:cw20-base` we will use other prefixes for other languages, and their standard global namespacing",
              "type": "string"
            },
            "version": {
              "description": "version is any string that this implementation knows. It may be simple counter \"1\", \"2\". or semantic version on release tags \"v0.7.0\", or some custom feature flag list. the only code that needs to understand the version parsing is code that knows how to migrate from the given contract (and is tied to it's implementation somehow)",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "ManagerModuleInfo": {
          "type": "object",
          "required": [
            "address",
            "id",
            "version"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "version": {
              "$ref": "#/definitions/ContractVersion"
            }
          },
          "additionalProperties": false
        }
      }
    },
    "module_versions": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ModuleVersionsResponse",
      "type": "object",
      "required": [
        "versions"
      ],
      "properties": {
        "versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContractVersion"
          }
        }
      },
      "additionalProperties": false,
      "definitions": {
        "ContractVersion": {
          "type": "object",
          "required": [
            "contract",
            "version"
          ],
          "properties": {
            "contract": {
              "description": "contract is the crate name of the implementing contract, eg. `crate:cw20-base` we will use other prefixes for other languages, and their standard global namespacing",
              "type": "string"
            },
            "version": {
              "description": "version is any string that this implementation knows. It may be simple counter \"1\", \"2\". or semantic version on release tags \"v0.7.0\", or some custom feature flag list. the only code that needs to understand the version parsing is code that knows how to migrate from the given contract (and is tied to it's implementation somehow)",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      }
    }
  }
}
