{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "InstantiateMsg",
  "description": "Manager Instantiate Msg",
  "type": "object",
  "required": [
    "account_id",
    "install_modules",
    "module_factory_address",
    "name",
    "owner",
    "version_control_address"
  ],
  "properties": {
    "account_id": {
      "$ref": "#/definitions/AccountId"
    },
    "description": {
      "type": [
        "string",
        "null"
      ]
    },
    "install_modules": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ModuleInstallConfig"
      }
    },
    "link": {
      "type": [
        "string",
        "null"
      ]
    },
    "module_factory_address": {
      "type": "string"
    },
    "name": {
      "type": "string"
    },
    "owner": {
      "$ref": "#/definitions/GovernanceDetails_for_String"
    },
    "version_control_address": {
      "type": "string"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "AccountId": {
      "description": "Unique identifier for an account. On each chain this is unique.",
      "type": "object",
      "required": [
        "seq",
        "trace"
      ],
      "properties": {
        "seq": {
          "description": "Unique identifier for the accounts create on a local chain. Is reused when creating an interchain account.",
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "trace": {
          "description": "Sequence of the chain that triggered the IBC account creation `AccountTrace::Local` if the account was created locally Example: Account created on Juno which has an abstract interchain account on Osmosis, which in turn creates an interchain account on Terra -> `AccountTrace::Remote(vec![\"juno\", \"osmosis\"])`",
          "allOf": [
            {
              "$ref": "#/definitions/AccountTrace"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "AccountTrace": {
      "description": "The identifier of chain that triggered the account creation",
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "local"
          ]
        },
        {
          "type": "object",
          "required": [
            "remote"
          ],
          "properties": {
            "remote": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChainName"
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Binary": {
      "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
      "type": "string"
    },
    "ChainName": {
      "description": "The name of a chain, aka the chain-id without the post-fix number. ex. `cosmoshub-4` -> `cosmoshub`, `juno-1` -> `juno`",
      "type": "string"
    },
    "GovernanceDetails_for_String": {
      "description": "Governance types",
      "oneOf": [
        {
          "description": "A single address is admin",
          "type": "object",
          "required": [
            "Monarchy"
          ],
          "properties": {
            "Monarchy": {
              "type": "object",
              "required": [
                "monarch"
              ],
              "properties": {
                "monarch": {
                  "description": "The monarch's address",
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "Used when the account is a sub-account of another account.",
          "type": "object",
          "required": [
            "SubAccount"
          ],
          "properties": {
            "SubAccount": {
              "type": "object",
              "required": [
                "manager",
                "proxy"
              ],
              "properties": {
                "manager": {
                  "description": "The manager of the account of which this account is the sub-account.",
                  "type": "string"
                },
                "proxy": {
                  "description": "The proxy of the account of which this account is the sub-account.",
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "description": "An external governance source",
          "type": "object",
          "required": [
            "External"
          ],
          "properties": {
            "External": {
              "type": "object",
              "required": [
                "governance_address",
                "governance_type"
              ],
              "properties": {
                "governance_address": {
                  "description": "The external contract address",
                  "type": "string"
                },
                "governance_type": {
                  "description": "Governance type used for doing extra off-chain queries depending on the type.",
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "ModuleInfo": {
      "description": "Stores the namespace, name, and version of an Abstract module.",
      "type": "object",
      "required": [
        "name",
        "namespace",
        "version"
      ],
      "properties": {
        "name": {
          "description": "Name of the contract",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace of the module",
          "allOf": [
            {
              "$ref": "#/definitions/Namespace"
            }
          ]
        },
        "version": {
          "description": "Version of the module",
          "allOf": [
            {
              "$ref": "#/definitions/ModuleVersion"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "ModuleInstallConfig": {
      "description": "Module info and init message",
      "type": "object",
      "required": [
        "module"
      ],
      "properties": {
        "init_msg": {
          "anyOf": [
            {
              "$ref": "#/definitions/Binary"
            },
            {
              "type": "null"
            }
          ]
        },
        "module": {
          "$ref": "#/definitions/ModuleInfo"
        }
      },
      "additionalProperties": false
    },
    "ModuleVersion": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "latest"
          ]
        },
        {
          "type": "object",
          "required": [
            "version"
          ],
          "properties": {
            "version": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Namespace": {
      "description": "Represents an Abstract namespace for modules",
      "type": "string"
    }
  }
}
