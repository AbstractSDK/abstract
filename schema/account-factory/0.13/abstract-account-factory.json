{
  "contract_name": "abstract-account-factory",
  "contract_version": "0.13.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "description": "Msg used on instantiation",
    "type": "object",
    "required": [
      "ans_host_address",
      "module_factory_address",
      "version_control_address"
    ],
    "properties": {
      "ans_host_address": {
        "description": "AnsHost contract",
        "type": "string"
      },
      "module_factory_address": {
        "description": "AnsHosts of module factory. Used for instantiating manager.",
        "type": "string"
      },
      "version_control_address": {
        "description": "Version control contract used to get code-ids and register Account",
        "type": "string"
      }
    },
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "description": "Execute function entrypoint.",
    "oneOf": [
      {
        "description": "Handler called by the CW-20 contract on a send-call",
        "type": "object",
        "required": [
          "receive"
        ],
        "properties": {
          "receive": {
            "$ref": "#/definitions/Cw20ReceiveMsg"
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Update config",
        "type": "object",
        "required": [
          "update_config"
        ],
        "properties": {
          "update_config": {
            "type": "object",
            "properties": {
              "admin": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "ans_host_contract": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "module_factory_address": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "subscription_address": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "version_control_contract": {
                "type": [
                  "string",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      },
      {
        "description": "Creates the core contracts and sets the permissions. [`crate::manager`] and [`crate::proxy`]",
        "type": "object",
        "required": [
          "create_account"
        ],
        "properties": {
          "create_account": {
            "type": "object",
            "required": [
              "governance",
              "name"
            ],
            "properties": {
              "description": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "governance": {
                "$ref": "#/definitions/GovernanceDetails"
              },
              "link": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "Binary": {
        "description": "Binary is a wrapper around Vec<u8> to add base64 de/serialization with serde. It also adds some helper methods to help encode inline.\n\nThis is only needed as serde-json-{core,wasm} has a horrible encoding for Vec<u8>. See also <https://github.com/CosmWasm/cosmwasm/blob/main/docs/MESSAGE_TYPES.md>.",
        "type": "string"
      },
      "Cw20ReceiveMsg": {
        "description": "Cw20ReceiveMsg should be de/serialized under `Receive()` variant in a ExecuteMsg",
        "type": "object",
        "required": [
          "amount",
          "msg",
          "sender"
        ],
        "properties": {
          "amount": {
            "$ref": "#/definitions/Uint128"
          },
          "msg": {
            "$ref": "#/definitions/Binary"
          },
          "sender": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "GovernanceDetails": {
        "description": "Governance types",
        "oneOf": [
          {
            "description": "A single address is admin",
            "type": "object",
            "required": [
              "Monarchy"
            ],
            "properties": {
              "Monarchy": {
                "type": "object",
                "required": [
                  "monarch"
                ],
                "properties": {
                  "monarch": {
                    "description": "The monarch's address",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          },
          {
            "description": "An external governance source",
            "type": "object",
            "required": [
              "External"
            ],
            "properties": {
              "External": {
                "type": "object",
                "required": [
                  "governance_address",
                  "governance_type"
                ],
                "properties": {
                  "governance_address": {
                    "description": "The external contract address",
                    "type": "string"
                  },
                  "governance_type": {
                    "description": "Governance type used for doing extra off-chain queries depending on the type.",
                    "type": "string"
                  }
                }
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Uint128": {
        "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
        "type": "string"
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "type": "object",
        "required": [
          "config"
        ],
        "properties": {
          "config": {
            "type": "object",
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    ]
  },
  "migrate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "MigrateMsg",
    "description": "We currently take no arguments for migrations",
    "type": "object",
    "additionalProperties": false
  },
  "sudo": null,
  "responses": {
    "config": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "ConfigResponse",
      "type": "object",
      "required": [
        "ans_host_contract",
        "module_factory_address",
        "next_account_id",
        "owner",
        "version_control_contract"
      ],
      "properties": {
        "ans_host_contract": {
          "type": "string"
        },
        "module_factory_address": {
          "type": "string"
        },
        "next_account_id": {
          "type": "integer",
          "format": "uint32",
          "minimum": 0.0
        },
        "owner": {
          "type": "string"
        },
        "subscription_address": {
          "type": [
            "string",
            "null"
          ]
        },
        "version_control_contract": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
